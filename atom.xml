<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Marcin bloguje]]></title>
  <link href="http://zygm0nt.github.com/atom.xml" rel="self"/>
  <link href="http://zygm0nt.github.com/"/>
  <updated>2016-07-24T23:08:13+02:00</updated>
  <id>http://zygm0nt.github.com/</id>
  <author>
    <name><![CDATA[Marcin Cylke]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IT minimalist]]></title>
    <link href="http://zygm0nt.github.com/blog/2016/07/24/it-minimalist/"/>
    <updated>2016-07-24T23:06:00+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2016/07/24/it-minimalist</id>
    <content type="html"><![CDATA[<p>This is me at this moment in time:</p>

<ul>
<li>164 rss channels I&#8217;m subscribed to</li>
<li>47 opened browser tabs, in two different browsers (Chrome, Firefox), across two different machines,</li>
<li>29 movies to watch -</li>
<li>44 notes in google keep</li>
<li>78 books to read</li>
</ul>


<p>This is information overload.</p>

<!-- more -->


<p><em>Disclaimer</em>: Please treat this entry as a mind dump - the description of my approach at this moment. These are ways of dealing with information overflow, and also threads. If you&#8217;d like to discuss anything related, feel free to write about that in comments&#8217; section.</p>

<p>You can always say I&#8217;m just clicking like a madman, or suffering from <a href="https://en.wikipedia.org/wiki/Adhd">ADHD</a> or <a href="https://en.wikipedia.org/wiki/Fear_of_missing_out">FOMA</a>. Sure, this would be the simplest explanation.</p>

<p>But I&#8217;d argue, that my behavior isn&#8217;t that rare. People just tend to get lost in this abundance of information. That&#8217;s why I&#8217;ve tried introducing minimalistic approach in my digital activity.</p>

<h2>What is minimalism</h2>

<p>There is actually a trend that says - leave only the most important things, have only a hundred of them, this should suffice. You can read about <a href="http://www.theminimalists.com/minimalism/">it</a> <a href="http://www.becomingminimalist.com/">all</a> <a href="http://time.com/3738202/minimalism-clutter-too-much-stuff/">around</a> the <a href="http://zenhabits.net/">internet</a>.</p>

<p>In general this is more about simplifying your living, not only its physical aspects. There are lots of advises how to have less on your mind, let go of unimportant things. And this all really helps.</p>

<p>Some of those I&#8217;ve tried. And it helped. I&#8217;ve stopped blindly gathering things. I&#8217;ve thrown away, sold or swapped some others I know I won&#8217;t look into again. I&#8217;ve somewhat learned how to at best try to be a minimalist in physical world. I&#8217;m still struggling to set my mind onto minimalist&#8217;s tracks.</p>

<p>What I&#8217;ve been lacking was following those rules with my thought processes and my digital activity.
The way I can most precisely describe my mind, or what&#8217;s happening in it is indycar race with new cars constantly joining without the old ones retiring.
This means all the time I get all the weird ideas, some small, like clean the fridge, some bigger, like I need to check this new awesome hardware or software platform, and sometimes they&#8217;re just overwhelming but tempting. The kind of bold ones - &#8220;get rich young or die trying&#8221; kind.</p>

<h2>How I deal with this constant stream of &#8220;joy&#8221;?</h2>

<ul>
<li><a href="http://bulletjournal.com/">bullet journal</a> - one journal instead of myriads of little notes all over the place . The idea is really neat, cause it assumes you spent some time reviewing your past, not finished goals and verify whether they&#8217;re still things worth pursuing or not,</li>
<li><a href="https://keep.google.com">google keep</a> - nice but it is just a virtual bunch of little notes. Great for fast note-scribbling on a mobile. Also they have one huge advantage over paper ones - they&#8217;re searchable,</li>
<li><a href="https://getpocket.com/">pocket</a> - I use this simple app a lot. It allows me to channel all the things that seem like a worthwhile reads to mobile - thus they won&#8217;t pollute browser windows. And there is a chance I&#8217;ll read them later. There is also another thing about cluttering my pocket account, but by postponing to Pocket you gain time to reconsider if that piece of information is still relevant after some amount of time.</li>
</ul>


<h2>Distractions / sources of &#8220;joy&#8221;</h2>

<ul>
<li>twitter, facebook - sifting through meaningless entries on some of those services try to limit it&#8217;s usage, to some amount per day/week</li>
<li><a href="http://newsblur.com/">newsblur</a> - lots of RSS feeds - I read only the most interesting ones, which means I skim through majority of the feeds. Also I try to follow simple rule - if I want to add a new feed, I look through those already there and try to decide which ones I don&#8217;t actively read, or don&#8217;t enjoy. It is not obligatory to remove feeds, but the simple act of reconsidering is sometimes the best solution.</li>
</ul>


<h2>Conclusion</h2>

<p>Not doing anything isn&#8217;t helping. Advising at least some solutions to this data influx is the least we can do. I&#8217;ve mentioned just the most useful to me. If you have yours, please share those in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Should you switch to Mac?]]></title>
    <link href="http://zygm0nt.github.com/blog/2016/07/07/mac-os-x-switch/"/>
    <updated>2016-07-07T23:22:00+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2016/07/07/mac-os-x-switch</id>
    <content type="html"><![CDATA[<p><img src="https://farm9.staticflickr.com/8064/8229071681_02ffdb91dc_z_d.jpg" alt="enter image description here" /><em>by Flick user <a href="https://www.flickr.com/photos/raneko/8229071681/in/photolist-dxb9je-sEQEP-5gDCSr-PE6FE-7Pa2t3-5yhFqq-MsHbZ-tEVFv-kBEvsd-5uPrGV-a5wisf-Ea1We-5tX2pp-22ybhw-ivTix6-5yk9cA-kBCugR-gcSkD-8cdXjv-asK9Y-7ZM66R-8N4eSG-4mchWA-4pjwaT-Gy8BR-7HPwfe-dxb9hv-4rXMuz-h6gJgm-9jULZ6-5SPsfu-kBECo7-6UUwCT-5whRwW-4rujwZ-8Kye5Q-9hN1d6-5utN7V-k9drqQ-4QPsUy-8VEazh-8UB7Ms-8VEaEq-neQih-8EHChx-ecth3o-8yrLUn-o7oNS-kBCXKM-6UYBrs">raneko</a></em></p>

<p>Who would have thought? Me switching to Mac? But it actually happened. I&#8217;ve been a long time Linux user, so why actually do the switch now? Or ever? Have a look at my thoughts and insights of novice Mac user.</p>

<!--more-->


<h2>In the beginning</h2>

<p>My humble beginnings were with RedHat 6.0 on a AMD Duron 600Mhz PC machine. With a dialup connection. And setting that thing to connect into Poland&#8217;s national provider TPSA was rather painful. After some time using Linux, going from RedHat to Slackware I&#8217;ve decided things weren&#8217;t tough enough and switched to BSDs. That was really fun! I&#8217;ve used Free and Open flavors for a few years which very really great. Than switched back to Linux. I&#8217;ve used those *nix systems for all-things-computer. At home and at work.</p>

<h2>The switch</h2>

<p>And than came the new job and I had to choose: regular Dell or Macbook? Blue pill or red pill? I chose the later.</p>

<p>The switch wasn&#8217;t that painful, but mainly thanks to superb hardware Apple offers. Having to get used to a completely new OS was quite another story. It&#8217;s not that I was shocked by it. As a long time Linux user all the concepts are known to me. It&#8217;s the other way around - there are a lot of things missing that I learned to require from my tool of work.</p>

<p>What I really appreciate is the known userland tools - it&#8217;s BSD at the heart of it. Well, of course the kernel is some whacky Mach microkernel, but as for the userland I&#8217;m happy :) You can read more about the kernel and system&#8217;s design history on wikipedia (<a href="https://en.wikipedia.org/wiki/OS_X">Os X</a>, <a href="https://en.wikipedia.org/wiki/Darwin_(operating_system">Darwin</a>) <a href="https://en.wikipedia.org/wiki/XNU">XNU</a>)</p>

<p>One of the biggest disappointments was the filesystem and the way it&#8217;s presented to users. Mac OS X comes with HFS+ (<a href="https://en.wikipedia.org/wiki/HFS_Plus">link</a>) filesystem which is case insensitive!!! To me this seems like an abomination. Plus there are multiple shortcuts taken by Apple engineers, like its endiannes: primarily Macs used PowerPC chips which are BigEndian by desing, but after switching to Intel processors everything is LittleEndian now. AFAIK HFS+ has to still switch bytes when reading metadata.</p>

<p>Really neat thing I&#8217;ve found out recently is that under the hood OS X uses PF (OpenBSD&#8217;s packet filter) as a firewalling solution.
I don&#8217;t know which version is in the current release and how does it compare against the original implementation, but since PF has such a nice syntax and performance it&#8217;s great to have it on board. There are numerous blog posts about setting a decent firewall on OS X with PF so go have a look. Also you can play with PF by means of a set of apps called <a href="http://www.murusfirewall.com/">Murus</a>.</p>

<h2>Useful tools</h2>

<ul>
<li><a href="http://brew.sh/">Brew</a> - basic application provider, offers all the things I&#8217;ve become used to when on Linux,</li>
<li><a href="https://github.com/ianyh/Amethyst">Amethyst</a> - allows window tiling with keyboard shortcuts and has focus-follows-mouse :D I love this feature, although with all the windows popping all over the place I must admit it sometimes gets messy.</li>
<li><a href="https://www.ragingmenace.com/software/menumeters/">MenuMeters</a> - have a bunch of those geeky meters all over the place (no longer usable with El Capitan)</li>
<li>Alfred - seems like a nice app, Spotlight on steroids. It&#8217;s free and you can download it via <a href="https://itunes.apple.com/au/app/alfred/id405843582?mt=12">ITunes</a></li>
<li>Flashlight - add more providers to Spotlight - unfortunately with recent introduction of rootless mac partition it&#8217;s no longer possible to use this tool</li>
</ul>


<h2>Hacking Spotlight</h2>

<p>Spotlight is just that neat little thing out there that seems like indexing all the things and runs installed programs. But it can also serve as a calculator and &#8230;</p>

<p>You can also read the contents of its cache file.</p>

<p>Up until version 10.10.4 of OS X it was possible to have additions to spotlight, but now this behaviour is blocked by the system.
http://mac-how-to.wonderhowto.com/how-to/customize-spotlight-search-mac-os-x-yosemite-0160786/</p>

<h2>Script setup</h2>

<p>Setup your mac with this shell script - but be very careful and read through this file first! https://gist.github.com/brandonb927/3195465</p>

<p><img src="https://farm6.staticflickr.com/5168/5263917715_6c8217fcfe_z_d.jpg" alt="One sneaky image" /><em>by Flickr user <a href="https://www.flickr.com/photos/blakespot/5263917715/in/photolist-929XkZ-fJwTR-8Me2LN-8qSP9F-6UD2Ce-fM51y-ARaAo-BJXFt-iE8ep-4rXScB-bX3z7w-6npV8P-5Eamox-33QA9W-5EXuR9-mQDnb-6UqpxG-6UqF7m-69b4jp-oytZCJ-4rXGFP-6xweAZ-ACukt-aZfi5-6QouE3-5CAQgW-8MeHqC-5QBeu1-L4qEw-4s35hq-4w9tXh-67Ymah-4s33cu-jjDFo-6J3zqD-8N4tSh-kbFD4-sESfP-66GAT5-9FUKfq-d3BrPG-4rXPZt-8N1aLa-6UCTvi-kBCzsH-2SXDWe-5CGTEq-5zogZ2-5JAGsk-kkAgZK">blakespot</a></em></p>

<h2>Neat things</h2>

<p>And it is quite positive, that Mac OS X developers care about small, but extremely important things - like building OpenSSH with LibreSSL support!</p>

<h2>DTrace</h2>

<p>Recently I&#8217;ve experienced a huge slowdown on my Mac. The It support&#8217;s solution was to reinstall the OS. I refused, this seemed like a barbaric method and also I just wanted to use this opportunity to delve deeper into internals of this OS.</p>

<p>I&#8217;ve started with analysing system behaviour with <a href="https://en.wikipedia.org/wiki/DTrace">DTrace</a> - probing interface originating from Solaris</p>

<p>Useful introductory links are here:</p>

<ul>
<li>http://dtrace.org/blogs/brendan/2011/10/10/top-10-dtrace-scripts-for-mac-os-x/</li>
<li>http://dtrace.org/blogs/brendan/2012/11/14/dtracing-in-anger/</li>
</ul>


<h2>Conclusion</h2>

<p>All in all the switch was relatively painless, and with tools and tricks described here I feel very comfortable using this system.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scalar Conf 2016]]></title>
    <link href="http://zygm0nt.github.com/blog/2016/04/29/scalar-conf-2016/"/>
    <updated>2016-04-29T22:22:00+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2016/04/29/scalar-conf-2016</id>
    <content type="html"><![CDATA[<p>Scalar Conf 2016</p>

<p><img src="http://zygm0nt.github.com/assets/POLIN-Museum-of-the-History-of-Polish-Jews-int02.jpg" alt="Polin museum - interior" /></p>

<p>This small conference had its third installment in (http://www.polin.pl/en)[Polin - Museum of the History of Polish Jews]. Organizing Scala conference isn&#8217;t that obvious and having that kind of attention is really great - all the foreign speakers, etc.</p>

<p>Here is a quick recap of presentations I&#8217;ve attended.</p>

<!-- more -->


<h3>Having a cake &#8230; - by Paweł Szulc</h3>

<p>A keynote about typeclasses. I&#8217;ve read the slides before the presentation  -and they are available <a href="http://www.slideshare.net/paulszulc/introduction-to-type-classes-in-30-min">here</a>, so it wasn&#8217;t new to me. But I&#8217;d strongly recommend to watch this talk.</p>

<p>Also, there is another nice talk by Paweł: <a href="https://www.youtube.com/watch?v=ENtdZ9MBo5Y"> Category theory is absolute general nonsense!</a> This talk is in Polish only.</p>

<h3>EFF Monad - by Eric Torreborre</h3>

<p>Different way of monadic composition, implemented in a separate library: <a href="https://github.com/atnos-org/eff-cats">eff-cats</a> (there is also scalaz alternative). Technically it was a bit over my head, but after experimenting with the concept at home it seems interesting.</p>

<p>I liked that Eric, being Zalando employee, developed that for their internal usage. Also the beauty of easily constructing different technological stacks with consistent API is very tempting.</p>

<p>Interesting things used/mentioned were:</p>

<ul>
<li><a href="github.com/non/kind-projector">non/kind-projector</a>- for projections</li>
<li><a href="http://haskell.cs.yale.edu/?post_type=publication&amp;p=319">Monad Transformers and Modular Interpreters</a></li>
</ul>


<h3>Incremental compiler - by Krzysztof Romanowski</h3>

<p>Deep dive into scalac incremental compiler implementation. While the presentation itself, the way it was presented, was very nice, I didn&#8217;t particularly enjoy the topic. It seemed more appropriate for tools&#8217; developers.</p>

<h3>Akka cluster with Etcd - by Maciej Biłas</h3>

<p>This one looked promising. Joining multiple exciting technologies seems often that way. Unfortunately it was rather tech preview of Kubernetes app setup rather than Scala presentation.</p>

<p>I&#8217;m a bit disappointed, because looking through the sources of the project <a href="https://github.com/rkrzewski/akka-cluster-etcd">akka-cluster-etcd</a> there are lots of things to describe. Kubernetes not being one of them ;-)</p>

<h3>Shapeless? Easy! - by Valentin Kasas</h3>

<p>Well, that was a clear introduction to shapeless. Till this presentation I&#8217;ve treated shapeless as only some vague thingy you use when writing libraries. Valentin proved otherwise.</p>

<p>He gave a clear and consistent tutorial on the basics of shapeless and its potential use in some example applications. He created a simple diff tool. Not that useful in real life application, but definitely helped make a point.</p>

<p>Will look into real life examples in near future.</p>

<p>Fun fact: The speaker had his presentation in <a href="https://github.com/marconilanna/REPLesent">REPLesent</a>, a sbt plugin for presentations - and performed most of the slide-jumping-fu with just one hand, other held in his pocket :D Looked quite hilarious.</p>

<p>Valentin also mentioned shapeless&#8217; typeclass derivation - this actually looks nice! Have a look at this <a href="https://meta.plasm.us/posts/2015/11/08/type-classes-and-generic-derivation/">question</a></p>

<h3>Cool Toolz in the Scalaz and Cats Toolboxes - by Jan Pustelnik</h3>

<p>Functional Design Patterns - enjoyable talk. With a bit of theoretical background, lots of useful use-cases. The talk was about cats and scalaz - both being very similar, and patterns they contain.</p>

<p>Key points being:</p>

<ul>
<li>Functor pattern for abstracting Big Data computations, to achieve easier testability</li>
<li>composing functors - |@| scream operator - also know (officially) as Applicative Builder</li>
<li>Applicative  - a list of computation into a computation of lists, list traversal</li>
<li>Applicative pattern for reading config</li>
</ul>


<p>There is this nice video called &#8220;A purely functional approach to building large applications&#8221;. Go see <a href="https://www.youtube.com/watch?v=dS3IlDBDlvo">it</a>.</p>

<h2>Conclusion</h2>

<p>To conclude - the conference was really great. Both the talks and social side of the event were enjoyable. I&#8217;ve been blown away by the great architecture of the museum itself. Been there a couple times and enjoyed all of them.</p>

<p>The much needed change would be to bring more tracks, because sometimes topics were too specific and I&#8217;d gladly change lecture to some other.</p>

<p>As for the usual conference merch, there were no bags with leaflets and pens etc. It came as a surprise to me, but I also really liked it. People infact throw away most of the contents from such bags. Also, no t-shirt as a default - great idea! If you like it - just buy one, otherwise don&#8217;t bother.</p>

<p>Overall - great job Softwaremill! Keep up the good work!.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lambda Days 2016]]></title>
    <link href="http://zygm0nt.github.com/blog/2016/02/20/lambda-days-2016/"/>
    <updated>2016-02-20T23:22:00+01:00</updated>
    <id>http://zygm0nt.github.com/blog/2016/02/20/lambda-days-2016</id>
    <content type="html"><![CDATA[<h1>Lambda Days 2016 - Kraków</h1>

<p>This last two days I&#8217;ve spend on a conference in Kraków. The topics
revolved around functional programming, with all the experimental stuff,
popular languages, etc. Here are the talks I&#8217;ve been to and short summaries of those:</p>

<h2>Day 1:</h2>

<ul>
<li><p><strong>Propositions as types</strong> - the keynote delivered by Philip Wadler - seen it already on <a href="https://www.youtube.com/watch?v=IOiZatlZtGU">YouTube</a>. But the thing with Lambda t-shirt looked funny again :D</p></li>
<li><p><strong>Using &#8220;Program shaping&#8221; and algorithmic skeletons to parallelise an evolutionary multi-agent system in Erlang</strong> - pretty long title, huh :) The presentation, thou very academic was also quite interesting. The whole concept not being particularly new, but the set of tools used for refactorings into parallel code seemed interesting.</p></li>
<li><p><strong>Static analysis to identify divide-and-conquer algorithms</strong> - how to find particular class of algorithms in existing programs? Interesting but shallow, due to time limitations.</p></li>
<li><p><strong>The Mysteries of Dropbox</strong> - John Hughes of QuickCheck fame showed how
to test a big system using blackbox approach. Nice presentation, with
all the great insight he always brings into his talks.</p></li>
<li><p><strong>Muvr - Jan Machacek</strong> - that was a fun presentation. About how to build an app that detects your exercise routine and counts how many repeats you&#8217;ve done. There&#8217;ve been all:</p>

<ul>
<li>spark pipelining</li>
<li>Swift code demo (it seemed like Swift IDE offers something similar to notebook-like programming, is it?),</li>
<li>live coding
Unfortunately due to WiFi&#8217;s proxy settings the live demo could not be finished, but the code for all this is available somewhere on Github, on <a href="https://github.com/muvr">this account</a>.</li>
</ul>
</li>
<li><p><strong>Embracing change</strong> - how to introduce Clojure into your company&#8217;s
technology stack seamlessly - by <strong>Artur Skowroński.</strong>
Hilarious presentation about adopting new languages. It wasn&#8217;t that
groundbreaking, at least for me, but the way it was presented, and the
slides with all the Cthulhu references in them, were great!</p></li>
</ul>


<h2>Day 2:</h2>

<ul>
<li><p><strong>Things that matter by Bruce Tate</strong> - great energetic talk, with all the ideas about learning
new languages. Bruce is the author of two excellent books: &#8220;Seven
languages in seven weeks&#8221; and &#8220;Seven more languages in seven weeks&#8221; :)
He went through languages mentioned in his books and summed up
principles associated with their inception.</p>

<p>I&#8217;ve almost decided to not come to this presentation,
weighting between it and sleeping a little bit longer in my hotel room.</p></li>
<li><p><strong>The Zen of Akka</strong> - delivered by a resident hakker at Typesafe - Konrad
Malawski. Nice talk about Akka pitfalls, there were lots of
recommendations and even some previously unknown to me features of Akka
toolkit. Plus I loved the Japanese elements.</p></li>
<li><p><strong>Creating reactive components using ClojureScript React wrappers</strong> - by
Konrad Szydlo introduced Rum as a wrapper for React, described part of
the ecosystem and explained mechanics behind the technology. Fine
presentation, very intense on content. Konrad had 111 slides, but
managed to show all of them without being hasty.</p></li>
<li><p><strong>Getting started with Frege</strong> - Lech Glowiak, Frege seems to be a Haskell
on the JVM, which in itself seems like a nice thing. But I treat such
languages rather as nice experiments, than something useful. Especially
its Java interop looks ugly. Nevertheless the presentation was given
from the point of view of language contributor, which Lech is.</p></li>
<li><p><strong>Practical demystification of CRDT</strong> - by Dmitry Ivanov and Nami
Naserazad - both of them from TomTom. Guys are working on TomTom&#8217;s
NaviCloud product. Their presentation was a practical guide throught the
world of CRDTs (link to wikipedia). They showed their failures in
implementing the system, gave advices, etc. The whole thing is even
uploaded to github, so everyone can check their code
(http://github.com/ajantis/scala-crdt). I&#8217;ve really enjoyed this talk
due to its technical approach. There were no formal definitions, no
teortical considerations, just clean report from the trenches.</p></li>
<li><p><strong>Purely functiona Web Apps</strong> - by Michał Płachta - how to write Gitlab
companion app in Haskell + Elm? Haskell for backend and Elm for
frontend. This presentation showed great potential of Elm for frontend
development. Moderatly approachable considering Friday afternoon and my
lack of Haskell knowledge. Still, I plan to come back to this
presentation later.</p></li>
</ul>


<h2>What I haven&#8217;t seen but plan to as soon as videos are available</h2>

<ul>
<li><strong>Modeling your domain. What have we learned? Where do we go from here?</strong> - by Norbert Wójtowicz - about modeling domain in Clojurescript apps</li>
<li><strong>The F#orce awakend</strong> - by ewelina Gabasova - F# + geekery, the Twitter
went nuts about that presentation, suppose not without reason</li>
<li><strong>LFE - a lisp flavour on the Erlang VM</strong> - by Robert Virding - don&#8217;t know
why but it seems intriguing enough</li>
</ul>


<h2>Conclusion</h2>

<p>As always, things you didn&#8217;t expect to be interesting were the best
ones. Highlights being presentations by Bruce Tate, Jan Machacek and guys
from TomTom (Dmitry Ivanov and Nami Naserazad)</p>

<p>Thanks to organisers for this conference. But I must say, that day 2 was a lot better than the first one. The talks were better structured and presented.</p>

<p>One idea for the organizers - please print the schedule on the back of
conference badge. It was pretty annoying to have to take out the A4
sheets with whole day schedule each time I wanted to look at it</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[32c3 most interesting videos]]></title>
    <link href="http://zygm0nt.github.com/blog/2016/01/22/ccc-interesting-videos/"/>
    <updated>2016-01-22T00:32:00+01:00</updated>
    <id>http://zygm0nt.github.com/blog/2016/01/22/ccc-interesting-videos</id>
    <content type="html"><![CDATA[<p>It&#8217;s been some time since the most recent incarnation on Chaos Congress
took place (<a href="http://www.ccc.de/">CCC site</a>). I&#8217;ve finally managed to
sift through some of the videos. Have a selection of those I&#8217;ve found
most interesting to me. If there are others really worth watching - pass
me a line! Cheers.</p>

<!-- more -->


<ul>
<li>Tor onion services are more useful than most people realize — super
packed 32c3 talk from @torproject devs:</li>
</ul>


<div class="embed-video-container"><iframe src="http://zygm0nt.github.com//www.youtube.com/embed/wHmxCeLpveA" allowfullscreen></iframe></div>


<ul>
<li>State of the Onion - what&#8217;s happend in 2015 around Tor project.
Informative to say the least.</li>
</ul>


<div class="embed-video-container"><iframe src="http://zygm0nt.github.com//www.youtube.com/embed/DqBFez4v_2I" allowfullscreen></iframe></div>


<ul>
<li>A very interesting presentation. Especially in the light of Novena
Laptop and the like:</li>
</ul>


<div class="embed-video-container"><iframe src="http://zygm0nt.github.com//www.youtube.com/embed/rcwngbUrZNg" allowfullscreen></iframe></div>


<ul>
<li>SO YOU WANT TO BUILD A SATELLITE? - ha!</li>
</ul>


<div class="embed-video-container"><iframe src="http://zygm0nt.github.com//www.youtube.com/embed/FO68gG320SM" allowfullscreen></iframe></div>


<ul>
<li>INSIDE GLORIOUS LEADER’S OPERATING SYSTEM - this one is actually
great! No ridiculing, just a review of features. Go see what os-level
surveilance looks like:</li>
</ul>


<div class="embed-video-container"><iframe src="http://zygm0nt.github.com//www.youtube.com/embed/8LGDM9exlZw" allowfullscreen></iframe></div>


<ul>
<li>3D printing on the moon - just printing something on your 3d printer
seems trivial compared to the challange of doing this under Moon
conditions:</li>
</ul>


<div class="embed-video-container"><iframe src="http://zygm0nt.github.com//www.youtube.com/embed/_eYvMFipIQ4" allowfullscreen></iframe></div>


<ul>
<li>J. Alex Halderman, Nadia Heninger: Logjam: Diffie-Hellman, discrete
logs, the NSA, and you</li>
</ul>


<div class="embed-video-container"><iframe src="http://zygm0nt.github.com//www.youtube.com/embed/mS8gm-_rJgM" allowfullscreen></iframe></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Super Confitura Man]]></title>
    <link href="http://zygm0nt.github.com/blog/2014/07/14/super-confitura-man/"/>
    <updated>2014-07-14T20:50:00+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2014/07/14/super-confitura-man</id>
    <content type="html"><![CDATA[<h2>How Super Confitura Man came to be :)</h2>

<p>Recently at TouK we had a one-day hackathon. There was no main theme for
it, you just could post a project idea, gather people around it and hack
on that idea for a whole day - drinks and pizza included.</p>

<p>My main idea was to create something that could be fun to build and be
useful somehow to others. I’d figured out that since Confitura was just
around a corner I could make a game, that would be playable at TouK’s
booth at the conference venue. This idea seemed good enough to attract
Rafał Nowak <a href="https://twitter.com/RNowak3">@RNowak3</a> and Marcin Jasion
<a href="https://twitter.com/marcinjasion">@marcinjasion</a> - two TouK employees, that with me
formed a team for the hackathon.</p>

<p><img src="http://zygm0nt.github.com/assets/confitura-2014-01.jpg" alt="Confitura 01" /></p>

<!-- more -->


<p>The initial plan was to develop a simple mario-style game, with
preceduraly generated levels, random collectible items and enemies. One
of the ideas was to introduce Confitura Man as the main character, but
due to time constraints, this fall through. We’ve decided to just choose
a random available sprite for a character - hence the onion man :)</p>

<p><img src="http://zygm0nt.github.com/assets/confitura-2014-02.jpg" alt="Confitura 02" /></p>

<h2>How the game is played?</h2>

<p>Since we wanted to have a scoreboard and have unique users, we’ve
printed out QR codes. A person that would like to play the game could
pick up a QR code, show it against a camera attached to the play booth.
The start page scanned the QR code and launched the game with username
read from paper code.</p>

<p>The rest of the game was playable with gamepad or keyboard.</p>

<p><img src="http://zygm0nt.github.com/assets/confitura-2014-04.png" alt="Confitura game screen" /></p>

<h2>Technicalities</h2>

<p>Writing a game takes a lot of time and effort. We wanted to deliver, so
we’ve decided to spend some time in the days before the hackathon just
to bootstrap the technology stack of our enterprise.</p>

<p>We’ve decided that the game would be written in some Javascript based
engine, with Google Chrome as a web platform. There are a lot of HTML5
game engines - <a href="http://html5gameengine.com/">list of html5 game engines</a> and you could easily create a
game with each and every of them. We’ve decided to use <a href="http://phaser.io/">Phaser IO</a>
which handles a lot of difficult,  game-related stuff on its own. So, we
didn’t have to worry about physics, loading and storing assets,
animations, object collisions, controls input/output. Go see for
yourself, it is really nice and easy to use.</p>

<p>Scoreboard would be a rip-off from <a href="http://blog.gengo.com/jira-survivor/">JIRA Survivor</a>
with stats being served from some web server app. To make things harder,
the backend server was written in Clojure. With no experience in that
language in the team, it was a bit risky, but the tasks of the server
were trivial, so if all that clojure effort failed, it could be
rewritten in something we know.</p>

<h2>Statistics</h2>

<p>During the whole Confitura day there were 69 unique players (69 QR codes
were used), and 1237 games were played. The final score looked like
this:</p>

<ol>
<li>Barister Lingerie 158 - 1450 points</li>
<li>Boilerdang Custardbath 386 - 1060 points</li>
<li>Benadryl Clarytin 306 - 870 points</li>
</ol>


<p>And the obligatory scoreboard screenshot:</p>

<p><img src="http://zygm0nt.github.com/assets/confitura-2014-03.png" alt="Confitura 03" /></p>

<h2>Obstacles</h2>

<p>The game, being created in just one day, had to have problems :) It
wasn’t play tested enough, there were some rough edges. During the day
we had to make a few fixes:</p>

<ul>
<li>the server did not respect the highest score by specific user, it was just overwritting a user’s score with it’s latest one,</li>
<li>there was one feature not supported on keyboard, that was available on gamepad - turbo button</li>
<li>server was opening a database connection each time it got a request, so after around 5 minutes it would exhaust open file limit for MongoDB (backend database), this was easily fixed - thou the fix is a bit hackish :)</li>
</ul>


<p>These were easily identified and fixed.
Unfortunately there were issues that we were unable to fix while the
event was on:</p>

<ul>
<li>google chrome kept asking for the permission to use webcam - this was very annoying, and all the info found on the web did not work - <a href="http://stackoverflow.com/questions/16835421/how-to-allow-chrome-to-access-my-camera-on-localhost/16929608#16929608">StackOverflow thread</a></li>
<li>it was hard to start the game with QR code - either the codes were too small, or the lighting around that area was inappropriate - I think this
issue could be fixed by printing larger codes,</li>
</ul>


<h2>Technology evaluation</h2>

<p>All in all we were pretty happy with the chosen stack. Phaser was easy
to use and left us with just the fun parts of the game creation process.
Finding the right graphics with appropriate licensing was rather hard.
We didn’t have enough time to polish all the visual aspects of the game
before Confitura.</p>

<p>Writing a server in clojure was the most challenging part, with all the
new syntax and new libraries. There were tasks, trivial in java/scala,
but hard in Clojure - at least for a whimpy beginners :) Nevertheless
Clojure seems like a really handy tool and I’d like to dive deeper into
its ecosystem.</p>

<h2>Source code</h2>

<p>All of the sources for the game can be found here
<a href="https://github.com/TouK/confitura-man">TouK/confitura-man</a>.</p>

<p>The repository is split into two parts:</p>

<ul>
<li>game - HTML5 game</li>
<li>server - clojure based backend server</li>
</ul>


<p>To run the server you need to have a local MongoDB installation. Than in
server’s directory run:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ lein ring server-headless </span></code></pre></td></tr></table></div></figure>


<p>This will start a server on <code>http://localhost:3000</code></p>

<p>To run the game you need to install dependencies with bower and than
run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ grunt</span></code></pre></td></tr></table></div></figure>


<p>from game’s directory.</p>

<p>To launch the QR reading part of the game, you enter
<code>http://localhost:9000/start.html</code>. After scanning the code you’ll be
redirected to <code>http://localhost:9000/index.html</code> - and the game starts.</p>

<h2>Conclusion</h2>

<p>Summing up, it was a great experience creating the game. It was fun to
watch people playing the game. And even with all those glitches and
stupid graphics, there were people vigorously playing it, which was
awesome.</p>

<h2>Thanks to Rafał and Michał for great coding experience, and thanks to all the players of our stupid little game. If you’d like to ask me about anything - feel free to contact me by mail or twitter <a href="https://twitter.com/zygm0nt">@zygm0nt</a></h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Distributed scans with HBase]]></title>
    <link href="http://zygm0nt.github.com/blog/2013/12/10/distributed-scans-with-hbase/"/>
    <updated>2013-12-10T21:26:00+01:00</updated>
    <id>http://zygm0nt.github.com/blog/2013/12/10/distributed-scans-with-hbase</id>
    <content type="html"><![CDATA[<p>HBase is by design a columnar store, that is optimized for random reads.
You just ask for a row using rowId as an identifier and you get your
data instantaneously.</p>

<p>Performing a scan on part or whole table is a completely different thing.
First of all, it is sequential. Meaning it is rather slow, because it
doesn&#8217;t use all the RegionServers at the same time. It is implemented
that way to realize the contract of Scan command - which has to return
results sorted by key.</p>

<p>So, how to do this efficiently?</p>

<!-- more -->


<p>The usual way of getting data from HBase is with the help of its API,
mainly Scan objects. To accomplish the task I&#8217;ll use just them. I&#8217;ll
specify startRow and stopRow, so that each Scan request will be looking
through only part of the key space.</p>

<p>It is crucial to note, that this whole solution works because of key
sorting properties in HBase. So, HBase scans a table according to ascending key
values. Since keys are of String type, key with value &#8220;1&#8221; is smaller
than &#8220;2&#8221;, because they are sorted lexicographicly. So, also key with value &#8220;12345&#8221; is smaller than &#8220;2&#8221;. I&#8217;ve
leveraged this property so that I&#8217;ve partitioned my whole key space according to
the first character of the key. In my case keys contain only digits. So I
have 10 ranges:</p>

<ul>
<li>null-1</li>
<li>1-2</li>
<li>2-3</li>
<li>3-4</li>
<li>4-5</li>
<li>5-6</li>
<li>6-7</li>
<li>7-8</li>
<li>8-9</li>
<li>9-null</li>
</ul>


<p>The speedup comes from the fact, that each range resides in its own
partition. That&#8217;s right, I&#8217;ve presplit the table to have 10 partitions.
This corresponds rather nicely with my cluster&#8217;s setup, because I have
more than 10 RegionServers. So every partition should be on different
RegionServer. It will allow the code to do the requested scan operations
in parallel - giving me this exact performance boost.</p>

<p>How I&#8217;ve created the input table:</p>

<p><code></p>

<p>$ create 'tariff_changes', { NAME => 'cf', SPLITS_FILE => 'splits.txt', VERSIONS => 50, MAX_FILESIZE => 1073741824 }</p>

<p>$ alter 'tariff_changes', { NAME => 'cf', SPLITS_FILE => 'splits.txt', VERSIONS => 50, MAX_FILESIZE => 1073741824 }</p>

<p></code></p>

<p>Split file is just something along this lines:</p>

<p><code>
1
2
3
4
5
6
7
8
9
0
</code></p>

<p>This tells HBase what are the rowKeys starting and ending each of the
partitions.</p>

<p>Ok, so after this rather lengthy introduction, what the actual code
does? It just spins of a few threads - one for each partition - and runs
a Scan request tailored to that partitions key space. This way, I got a
10x speedup for this particular scan. The execution time went down from
30 minutes to 3 for my use case.</p>

<p>I&#8217;ve created an example implementation of this idea. You can find it on
GitHub:
<a href="https://github.com/zygm0nt/hbase-distributed-search">https://github.com/zygm0nt/hbase-distributed-search</a>.</p>

<p>Any ideas on how to speed things up even more with HBase?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple HBase ORM]]></title>
    <link href="http://zygm0nt.github.com/blog/2013/12/08/simple-hbase-orm/"/>
    <updated>2013-12-08T21:08:00+01:00</updated>
    <id>http://zygm0nt.github.com/blog/2013/12/08/simple-hbase-orm</id>
    <content type="html"><![CDATA[<p>When dealing with data stored in HBase, you are quick to come to a
conclusion, that it is extremaly inconvenient to reach to it
via HBase native API. It is very verbose and you always need to convert
between bytes and simple types - a pain.</p>

<p>While I was working on a project of mine, I thought, why not to easy
those pains and fetch real objects from HBase.</p>

<p>And that&#8217;s how this simplistic, hackish ORM came to life. It is no match
for projects like <a href="https://github.com/impetus-opensource/Kundera">Kundera</a>
(a JPA compliant solution), or <a href="https://code.google.com/p/n-orm/">n-orm</a>. Nevertheless, it just suits my needs :)</p>

<!-- more -->


<p>Project sources are hosted on GitHub: <a href="https://github.com/zygm0nt/hbase-annotations">https://github.com/zygm0nt/hbase-annotations</a></p>

<p>To make use of this, you need to have an entity class with annotations:</p>

<ul>
<li>@Column - with argument specifying column family and column name, ie.
@Column(&#8220;cf:column-name&#8221;)</li>
<li>@Id - will store row key in this property,</li>
<li>and optionaly @Value - for Spring Expression Language, in case you
need to perform some extraction on the value.</li>
</ul>


<p><em>Annotations should be on setter methods.</em></p>

<p>Now you have your model annotated and ready to be fetched from HBase.</p>

<p>The actual work is done with a service class, that should extend class
<a href="https://github.com/zygm0nt/hbase-annotations/blob/master/src/main/java/pl/touk/hadoop/hbase/BaseHadoopInteraction.java">BaseHadoopInteraction</a> just as class
<a href="https://github.com/zygm0nt/hbase-annotations/blob/master/src/test/java/pl/touk/hadoop/hbase/SampleHBaseClient.java">SimpleHBaseClient</a> does.</p>

<p>Then it is possible to just call:</p>

<script src="https://gist.github.com/zygm0nt/7863407.js"></script>


<p>Note that there are more methods you can use on BaseHadoopInteraction.
You can also do:</p>

<ul>
<li>scan</li>
<li>scan with key ranges</li>
<li>delete</li>
</ul>


<p>What you won&#8217;t get from this simple ORM is:</p>

<ul>
<li>automatic object updating,</li>
<li>nested objects,</li>
<li>saving to HBase - &#8216;cause I didn&#8217;t have a need for that,</li>
</ul>


<p>Hope you&#8217;ll find this piece of code useful. If you see room for
improvements while staying in project&#8217;s scope - please drop me a
message.</p>

<p>And if you are searching for a full-fledged ORM solution for interacting with HBase, just head
straight to Kundera project website :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recently at storm-users]]></title>
    <link href="http://zygm0nt.github.com/blog/2013/08/12/recently-at-storm-users/"/>
    <updated>2013-08-12T22:26:00+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2013/08/12/recently-at-storm-users</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been reading through storm-users Google Group recently. This
resolution was heavily inspired by Adam Kawa&#8217;s post <a href="http://hakunamapdata.com/football-zero-apache-pig-hero-the-essence-from-hundreds-of-posts-from-apache-pig-user-mailing-list/">&#8220;Football zero, Apache Pig hero&#8221;</a>. Since I&#8217;ve encountered a lot of insightful and very interesting information I&#8217;ve decided to describe some of those in this post.</p>

<!-- more -->


<ul>
<li><p>nimbus will work in HA mode - There&#8217;s a pull request open for it already&#8230; but some
recent work (distributing topology files via Bittorrent) will greatly
simplify the implementation. Once the Bittorrent work is done we&#8217;ll look
at reworking the HA pull request. (<a href="https://github.com/nathanmarz/storm/pull/629">storm’s pull request</a>)</p></li>
<li><p>pig on storm - Pig on Trident would be a cool and welcome project. Join
and groupBy have very clear semantics there, as those concepts exist
directly in Trident. The extensions needed to Pig are the concept of
incremental, persistent state across batches (mirroring those concepts
in Trident). You can read a complete <a href="https://cwiki.apache.org/confluence/display/PIG/Pig+on+Storm+Proposal">proposal</a>.</p></li>
<li><p>implementing topologies in pure python with <a href="https://github.com/AirSage/Petrel">petrel</a> looks like this:</p></li>
</ul>


<blockquote><pre><code>class Bolt(storm.BasicBolt):
    def initialize(self, conf, context):
       ''' This method executed only once '''
        storm.log('initializing bolt')

    def process(self, tup):
       ''' This method executed every time a new tuple arrived '''       
       msg = tup.values[0]
       storm.log('Got tuple %s' %msg)

if __name__ == "__main__":
    Bolt().run()
</code></pre></blockquote>

<ul>
<li><p>Fliptop is happy with storm - see their presentation <a href="http://www.slideshare.net/robbiecheng/lesson-learned-of-twitter-storm">here</a></p></li>
<li><p>topology metrics in 0.9.0: The new metrics feature allows you to collect
arbitrarily custom metrics over fixed windows. Those metrics are
exported to a metrics stream that you can consume by implementing
<a href="https://github.com/nathanmarz/storm/blob/master/storm-core/src/jvm/backtype/storm/metric/api/IMetricsConsumer.java">IMetricsConsumer</a> and configure with <a href="https://github.com/nathanmarz/storm/blob/master/storm-core/src/jvm/backtype/storm/Config.java#L473">Config.java#L473</a>.
Use <strong>TopologyContext#registerMetric</strong> to register new metrics.</p></li>
<li><p>storm vs flume - some users&#8217; point of view: I use Storm and Flume and find that they are better at
different things - it really depends on your use case as to which one is
better suited. First and foremost, they were originally designed to do
different things: Flume is a reliable service for collecting,
aggregating, and moving large amounts of data from source to destination
(e.g. log data from many web servers to HDFS). Storm is more for
real-time computation (e.g. streaming analytics) where you analyse data
in flight and don&#8217;t necessarily land it anywhere. Having said that,
Storm is also fault-tolerant and can write to external data stores (e.g.
HBase) and you can do real-time computation in Flume (using
interceptors)</p></li>
</ul>


<p>That&#8217;s all for this day - however, I&#8217;ll keep on reading through storm-users, so watch this space for more info on storm development.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zookeeper + Curator = Distributed sync]]></title>
    <link href="http://zygm0nt.github.com/blog/2013/06/23/zookeeper-curator/"/>
    <updated>2013-06-23T22:20:00+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2013/06/23/zookeeper-curator</id>
    <content type="html"><![CDATA[<p class="c8"><img height="300" src="http://zygm0nt.github.com/assets/2013-06-24-zookeeper-curator.jpg"></p><p class="c1"><span></span></p><p class="c8">
    <span>An application developed for one of my recent projects at TouK involved multiple servers. There was a requirement to ensure failover for the system&rsquo;s components. Since I had already a few separate components I didn&rsquo;t want to add more of that, and since there already was a Zookeeper ensemble running - required by one of the services, I&rsquo;ve decided to go that way with my solution.</span>
</p><h2 class="c8"><a name="h.v629433u6utf"></a><span>What is Zookeeper?</span></h2><p class="c8"><span>Just a crude distributed synchronization framework. However, it implements Paxos-style algorithms (</span><span
        class="c5"><a class="c0" href="http://en.wikipedia.org/wiki/Paxos_(computer_science)">http://en.wikipedia.org/wiki/Paxos_(computer_science)</a></span><span>) to ensure no split-brain scenarios would occur. This is quite an important feature, since I don&rsquo;t have to care about that kind of problems while using this app. You just need to create an ensemble of a couple of its instances - to ensure high availability. It is basically a virtual filesystem, with files, directories and stuff. One could ask why another filesystem? Well this one is a rather special one, especially for distributed systems. The reason why creating all the locking algorithms on top of Zookeeper is easy is its Ephemeral Nodes - which are just files that exist as long as connection for them exists. After it disconnects - such file disappears. </span>
</p><p class="c8"><span>With such paradigms in place it&rsquo;s fairly easy to create some high level algorithms for synchronization.</span>
</p><p class="c1"><span></span></p><p class="c8"><span>Having that in place, it</span><span>&nbsp;can</span><span>&nbsp;safely integrate multiple services ensuring loose coupling in a distributed way.</span>
</p><p class="c1"><span></span></p><h2 class="c8"><a name="h.ppqvt63vg53w"></a><span>Zookeeper from developer&rsquo;s POV</span>
</h2><p class="c8"><span>With all the base services for Zookeeper started, it seems there is nothing else, than just connect to it and start implementing necessary algorithms. Unfortunately, the API is quite basic and offers files and directories abstractions with the addition of different node type (file types) - ephemeral and sequence. It is also possible to watch a node for changes.</span>
</p><h2 class="c8"><a name="h.lgfultrxupbf"></a><span>Using bare Zookeeper is hard!</span></h2><p class="c8"><span>Creating connections is tedious - and there is lots of things to take care of. Handling an established connection is hard - when establishing connection to ensemble, it&rsquo;s necessary to negotiate a session also. During the whole process a number of exceptions can occur - these are &ldquo;recoverable&rdquo;
    exceptions, that can be gracefully handled and not break the connection.</span></p><p class="c1"><span></span></p><p
        class="c8"><span>So, Zookeeper API is hard.</span></p><p class="c1"><span></span></p><p class="c8"><span>Even if one is proficient with that API, then there come recipes. The reason for using Zookeeper is to be able to implement some more sophisticated algorithms on top of it. Unfortunately those aren&rsquo;t trivial and it is again quite hard to implement them without bugs.</span>
</p><p class="c1"><span></span></p><p class="c8"><span>And since distributed systems are hard, why would anyone want another difficult to handle tool? </span>
</p><p class="c1"><span></span></p><h2 class="c8"><a name="h.8n72xils1l1f"></a><span>Enter Curator</span></h2><p
        class="c8"><span>Happily, guys from Netflix implemented a nice abstraction for dealing with Zookeeper internals. They called it Curator and use it extensively in the company&rsquo;s environment. Curator offers consistent API for Zookeeper&rsquo;s functionality. It even implements a couple of recipes for distributed systems.</span>
</p><p class="c1"><span></span></p><h2 class="c8"><a name="h.k63iku7qitza"></a><span>File read/write</span></h2><p
        class="c8"><span>The basic use of Zookeeper is as a distributed configuration repository. For this scenario I only need read/write capabilities, to be able to write and read files from the Zookeeper filesystem. This code snippet writes a sample json to a file on ZK filesystem.</span>
</p><p class="c1"><span></span></p><a href="#" name="fb1072a0c295459e23a47b12e8c09952a5ab3768"></a><a href="#"
                                                                                                      name="0"></a>
<pre>
<code>
EnsurePath ensurePath = new EnsurePath(markerPath);
ensurePath.ensure(client.getZookeeperClient());
String json = “...”;
if (client.checkExists().forPath(statusFile(core)) != null)
     client.setData().forPath(statusFile(core), json.getBytes());
else
     client.create().forPath(statusFile(core), json.getBytes());

</code>
</pre>

<p class="c1"><span></span></p><h2 class="c8"><a name="h.ikl4cn73c5uw"></a><span>Distributed locking</span></h2>
<p class="c8"><span>Having multiple systems there may be a need of using an exclusive lock for some resource, or perhaps some big system requires it&rsquo;s components to synchronize based on locks. This &ldquo;recipe&rdquo;
    is an ideal match for those situations.</span></p><p class="c1"><span></span></p><a href="#"
                                                                                        name="b0329bbbf14b79ffaba1139881914aea887ef6a3"></a>
<a href="#" name="1"></a>
<pre>
<code>

lock = new InterProcessSemaphoreMutex(client, lockPath);
lock.acquire(5, TimeUnit.MINUTES);
… do sth …
lock.release();

</code>
</pre>

<p class="c8"><span>&nbsp;(from </span><span class="c5"><a class="c0"
                                                                   href="https://github.com/zygm0nt/curator-playground/blob/master/src/main/java/pl/touk/curator/LockingRemotely.java">https://github.com/zygm0nt/curator-playground/blob/master/src/main/java/pl/touk/curator/LockingRemotely.java</a></span><span>)</span>
</p><p class="c1"><span></span></p><h2 class="c8"><a name="h.ck92kse5nam2"></a><span>Sevice Advertisement</span></h2><p
        class="c8"><span>This is quite an interesting use case. With many small services on different servers it is not wise to exchange ip addresses and ports between them. When some of those services may go down, while other will try to replace them - the task gets even harder. </span>
</p><p class="c8"><span>That&rsquo;s why, with Zookeeper in place, it can be utilised as a registry of existing services.</span>
</p><p class="c1"><span></span></p><p class="c8"><span>If a service starts, it registers into the ServiceRegistry, offering basic information, like it&rsquo;s purpose, role, address, and port. </span>
</p><p class="c8"><span>Services that want to use a specific kind of service request an access to some instance. This way of configuring easily decouples services from their configuration.</span>
</p><p class="c1"><span></span></p><p class="c8"><span>Basically this scenario needs ? steps:</span></p><p class="c8">
    <span>1. Service starts and registers its presence (</span><span class="c5"><a class="c0"
                                                                                   href="https://github.com/zygm0nt/curator-playground/blob/master/src/main/java/pl/touk/curator/WorkerAdvertiser.java#L44">https://github.com/zygm0nt/curator-playground/blob/master/src/main/java/pl/touk/curator/WorkerAdvertiser.java#L44</a></span><span>)</span><span>:</span>
</p><p class="c1"><span></span></p><a href="#" name="1c67229d451cd2d82dddaf1fb12af1aed4a8ecb0"></a>

<pre>
<code>

ServiceDiscovery<WorkerMetadata> discovery = getDiscovery();
            discovery.start();
            ServiceInstance si = getInstance();
            log.info(si);
            discovery.registerService(si);


</code>
</pre>
<p class="c1"><span></span></p><p class="c8"><span>2. Another service - on another host or in another JVM on the same machine tries to discover who is implementing the service (</span><span
        class="c5"><a class="c0"
                      href="https://github.com/zygm0nt/curator-playground/blob/master/src/main/java/pl/touk/curator/WorkerFinder.java#L50">https://github.com/zygm0nt/curator-playground/blob/master/src/main/java/pl/touk/curator/WorkerFinder.java#L50</a></span><span>)</span><span>:</span>
</p><p class="c1"><span></span></p><a href="#" name="0e430a074ab36c8eea3f84fae3d0cffb400dd281"></a><a href="#"
                                                                                                      name="3"></a>
<pre>
<code>
instances = discovery.queryForInstances(serviceName);
</code>
</pre>

<p class="c8"><span>The whole concept here is ridiculously simple - the service advertising its presence just stores a file with its whereabouts. The service that is looking for service providers just look into specific directory and read stored definitions.</span>
</p><p class="c1"><span></span></p><p class="c8"><span>In my example, the structure advertised by services looks like this (+ some getters and constructor - the rest is here: </span><span
        class="c5"><a class="c0"
                      href="https://github.com/zygm0nt/curator-playground/blob/master/src/main/java/pl/touk/model/WorkerMetadata.java">https://github.com/zygm0nt/curator-playground/blob/master/src/main/java/pl/touk/model/WorkerMetadata.java</a></span><span>):</span>
</p><p class="c1"><span></span></p><a href="#" name="c0131478bfab43e60b5e077f3170a172a909d199"></a>

<pre>
<code>

public final class WorkerMetadata {
    private final UUID workerId;
    private final String listenAddress;
    private final int listenPort;
}

</code>
</pre>
<p class="c1"><span></span></p><h2 class="c8"><a name="h.qvt6wa2m15sm"></a><span>Source code</span></h2><p
        class="c8"><span>The above recipes are available in Curator library (</span><span class="c5"><a class="c0"
                                                                                                        href="http://curator.incubator.apache.org/">http://curator.incubator.apache.org/</a></span><span>). Recipes&rsquo;
    usage examples are in my github repo at </span><span class="c5"><a class="c0"
                                                                       href="https://github.com/zygm0nt/curator-playground">https://github.com/zygm0nt/curator-playground</a></span>
</p><p class="c1"><span></span></p><h2 class="c8"><a name="h.o1zkosbrwpah"></a><span>Conclusion</span></h2><p
        class="c8"><span>If you&rsquo;re in need of a reliable platform for exchanging data and managing synchronization, and you need to do it in a distributed fashion - just choose Zookeeper. Then add Curator for the ease of using it. Enjoy!</span>
</p><p class="c1"><span></span></p><p class="c1"><span></span></p>
<hr><p class="c1"><span></span></p>
<ol class="c13" start="1">
    <li class="c7"><span>image comes from: </span><span class="c5"><a class="c0"
                                                                      href="http://www.flickr.com/photos/jfgallery/2993361148">http://www.flickr.com/photos/jfgallery/2993361148</a></span>
    </li>
    <li class="c7"><span>all source code fragments taken from this repo: </span><span class="c5"><a class="c0"
                                                                                                    href="https://github.com/zygm0nt/curator-playground">https://github.com/zygm0nt/curator-playground</a></span>
    </li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Operational problems with Zookeeper]]></title>
    <link href="http://zygm0nt.github.com/blog/2013/03/21/zookeeper-tips/"/>
    <updated>2013-03-21T23:56:00+01:00</updated>
    <id>http://zygm0nt.github.com/blog/2013/03/21/zookeeper-tips</id>
    <content type="html"><![CDATA[<p>This post is a summary of what has been presented by Kathleen Ting on
StrangeLoop conference. You can watch the original here:
<a href="http://www.infoq.com/presentations/Misconfiguration-ZooKeeper">http://www.infoq.com/presentations/Misconfiguration-ZooKeeper</a></p>

<p>I&#8217;ve decided to put this selection here for quick reference.</p>

<h2>Connection mismanagement</h2>

<ul>
<li><p>too many connections</p>

<pre><code>  WARN [NIOServerCxn.Factory: 0.0.0.0/0.0.0.0:2181:NIOServerCnxn$Factory@247] - Too many connections from /xx.x.xx.xxx - max is 60
</code></pre></li>
<li><p>running out of ZK connections?</p>

<ul>
<li>set <code>maxClientCnxns=200</code> in <code>zoo.cfg</code></li>
</ul>
</li>
<li><p>HBase client leaking connections?</p>

<ul>
<li>fixed in HBASE-3777, HBASE-4773, HBASE-5466</li>
<li>manually close connections</li>
</ul>
</li>
<li><p>connection closes prematurely</p>

<pre><code>  ERROR: org.apache.hadoop.hbase.ZooKeeperConnectionException: HBase is able to connect to ZooKeeper but the connection closes immediately.
</code></pre></li>
<li><p>in <code>hbase-site.xml</code> set <code>hbase.zookeeper.recoverable.waittime=30000ms</code></p></li>
<li><p>pig hangs connecting to HBase</p>

<pre><code>  WARN org.apache.zookeeper.ClientCnxn: Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect java.net.ConnectionException: Connection refused!
</code></pre>

<p>  <strong>CAUSE:</strong> location of ZK quorum is not known to Pig</p>

<ul>
<li>use Pig 10, which includes PIG-2115</li>
<li>if there is an overlap between TaskTrackers and ZK quorum nodes

<ul>
<li>set <code>hbase.zookeeper.quorum</code> to final in <code>hbase-site.xml</code></li>
<li>otherwise add <code>hbaze.zoopeeker.quorum=hadoophbasemaster.lan:2181</code> in <code>pig.properties</code></li>
</ul>
</li>
</ul>
</li>
</ul>


<h2>Time mismanagement</h2>

<ul>
<li><p>client session timed out</p>

<pre><code>  INFO org.apache.zookeeper.server.ZooKeeperServer: Expiring session &lt;id&gt;, timeout of 40000ms exceeded
</code></pre>

<ul>
<li>ZK and HBase need the same session timeout values

<ul>
<li><code>zoo.cfg</code>: <code>maxSession=Timeout=180000</code></li>
<li><code>hbase-site.xml</code>: <code>zookeeper.session.timeout=180000</code></li>
</ul>
</li>
<li>don&#8217;t co-locate ZK with IO-intense DataNode or RegionServer</li>
<li>specify right amount of heap and tune GC flags

<ul>
<li>turn on parallel/CMS/incremental GC</li>
</ul>
</li>
</ul>
</li>
<li><p>clients lose connections</p>

<pre><code>  WARN org.apache.zookeeper.ClientCnxn - Session &lt;id&gt; for server &lt;name&gt;, unexpected error, closing socket connection and attempting reconnect java.io.IOException: Broken pipe
</code></pre>

<ul>
<li>don&#8217;t use SSD drive for ZK transaction log</li>
</ul>
</li>
</ul>


<h2>Disk management</h2>

<ul>
<li><p>unable to load database - unable to run quorum server</p>

<pre><code>  FATAL Unable to load database on disk !  java.io.IOException: Failed to process transaction type: 2 error: KeeperErrorCode = NoNode for &lt;file&gt; at org.apache.zookeeper.server.persistence.FileTxnSnapLog.restore(FileTxnSnapLog.java:152)!
</code></pre>

<ul>
<li>archive and wipe <code>/var/zookeeper/version-2</code> if other two ZK servers
are running</li>
</ul>
</li>
<li><p>unable to load database - unreasonable length exception</p>

<pre><code>  FATAL Unable to load database on disk java.io.IOException: Unreasonable length = 1048583 at org.apache.jute.BinaryInputArchive.readBuffer(BinaryInputArchive.java:100)
</code></pre>

<ul>
<li>server allows a client to set data larger than the server can read from disk</li>
<li>if a znode is not readable, increase <code>jute.maxbuffer</code>

<ul>
<li>look for <code>"Packet len &lt;xx&gt; is out of range"</code> in the client log</li>
<li>increase it by 20%</li>
<li>set in <code>JVMFLAGS="-Djute.maxbuffer=yy" bin/zkCli.sh</code></li>
<li>fixed in ZOOKEEPER-1513</li>
</ul>
</li>
</ul>
</li>
<li><p>failure to follow leader</p>

<pre><code>  WARN org.apache.zookeeper.server.quorum.Learner: Exception when following the leader java.net.SocketTimeoutException: Read timed out 
</code></pre>

  <strong>CAUSE:</strong>

<ul>
<li>disk IO contention, network issues</li>
<li>ZK snapshot is too large (lots of ZK nodes)</li>
</ul>


<p>  <strong>SOLVE:</strong></p>

<ul>
<li>reduce IO contention by putting dataDir on dedicated spindle</li>
<li>increase initLimit on all ZK servers and restart, see
ZOOKEEPER-1521</li>
<li>monitor network</li>
</ul>
</li>
</ul>


<h2>Best Practices</h2>

<p><strong>DOs</strong></p>

<ul>
<li>separate spindles for dataDir &amp; dataLogDir</li>
<li>allocate 3 or 5 ZK servers</li>
<li>tune garbage collection</li>
<li>run zkCleanup.sh script via cron</li>
</ul>


<p><strong>DON&#8217;Ts</strong></p>

<ul>
<li>dont&#8217; co-locate ZK with I/O intense DataNode or RegionServer</li>
<li>don&#8217;t use SSD drive for ZK transaction log</li>
</ul>


<p>You may use Zookeeper as an observer - a non-voting member:</p>

<ul>
<li><p>in zoo.cfg</p>

<pre><code>  peerType=observer
</code></pre></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[After WHUG meeting]]></title>
    <link href="http://zygm0nt.github.com/blog/2012/11/30/after-whug/"/>
    <updated>2012-11-30T22:20:00+01:00</updated>
    <id>http://zygm0nt.github.com/blog/2012/11/30/after-whug</id>
    <content type="html"><![CDATA[<p>Here are the slides from the talk a gave yesterday. If you have any
questions, please ask.</p>

<script async class="speakerdeck-embed"
data-id="cc18d5601d60013059a31231381554d7" data-ratio="1.33333333333333"
src="http://zygm0nt.github.com//speakerdeck.com/assets/embed.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WHUG 8. Beyond Hadoop - checking other options]]></title>
    <link href="http://zygm0nt.github.com/blog/2012/11/26/whug-8-beyond-hadoop/"/>
    <updated>2012-11-26T09:11:00+01:00</updated>
    <id>http://zygm0nt.github.com/blog/2012/11/26/whug-8-beyond-hadoop</id>
    <content type="html"><![CDATA[<p>W najbliższy czwartek - czyli 29.11.2012 - poprowadzę prezentację w
ramach Warsaw Hadoop User Group. Swoją obecność można odklinąć tu
http://www.meetup.com/warsaw-hug/</p>

<p>A o czym będę mówił? Przeklejka ze strony WHUG:</p>

<blockquote><p>Marcin skupi się na współpracy ekosystemu Hadoopa z innymi narzędziami.
Pokaże jak prosto i wygodnie przetwarzać grafy i jak stosować podejście
Big Data, w czasie rzeczywistym. Poruszy również temat łatwiejszego
tworzenia algorytmów Map-Reduce</p>

<p>Będzie to nieco mniej technicza (ale wciąż praktyczna) wycieczka po
obrzeżach tematyki, która jest zwykle poruszana w połączeniu z
Hadoop-em.</p>

<p>Prezentacja będzie dotyczyć narzędzi takich jak Cascading, Storm, Titan.</p></blockquote>

<p>Zapraszam!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hadoop HA setup]]></title>
    <link href="http://zygm0nt.github.com/blog/2012/10/30/hadoop-ha/"/>
    <updated>2012-10-30T12:40:00+01:00</updated>
    <id>http://zygm0nt.github.com/blog/2012/10/30/hadoop-ha</id>
    <content type="html"><![CDATA[<p>With the advent of Hadoop&#8217;s 2.x version, there finally is a working
High-Availability solution. Even two of those. Now it really is easy to
configure and use those solutions. It no longer require external
components, like
<a href="http://blog.cloudera.com/blog/2009/07/hadoop-ha-configuration/">DRBD</a>.
It all is just neatly packed into Cloudera Hadoop distribution - the
precursor of this solution.</p>

<p>Read on to find out how to use it.</p>

<!-- more -->


<p>The most important weakness of previous Hadoop releases was the
single-point-of-failure, which happend to be NameNode. NameNode as a key
component of every Hadoop cluster, is responsible for managing
filesystem namespace information and block location. Loosing its data results in loosing all the data
stored on DataNodes. HDFS is no longer able to reach for specific files,
or its blocks. This renders your cluster inoperable.</p>

<p>So it is crucial to be able to detect and counter problems with NameNode.
The most desirable behavior is to have a hot backup, that would ensure
a no-downtime cluster operation. To achieve this, the second NameNode
need to have up-to-date information on filesystem metadata and it needs
to be also up and running. Starting NameNode with existing set of data
may easily take many minutes to parse the actual filesystem state.</p>

<p>Previously used solution - depoying SecondaryNameNode - was somewhat
flawed. It took long time to recover after failure. It was not a
hot-backup solution, which also added to the problem. Some other
solution was required.</p>

<p>So, what needed to be made redundant is the edits dir contents and
sending block location maps from each of the DataNodes to NameNodes -
in case of HA deployment - to both NameNodes. This was accomplished in
two steps. The first one with the release of CDH 4 beta - solution based
on sharing edits directory. Than, with CDH 4.1 came quorum based solution.</p>

<p>Find out how to configure those on your cluster.</p>

<h2>Shared edits directory solution</h2>

<p><img src="http://blog.innovative-labs.com/blog/hadoop_ha-nfs.png" alt="Hadoop HA - NFS based edits share" /></p>

<p>For this kind of setup, there is an assumption, that in a cluster exists
a shared storage directory. It should be deployed using some kind of
network-based filesystem. You could try with NFS or GlusterFS.</p>

<div><script src='https://gist.github.com/3958555.js?file=core-site.xml'></script>
<noscript><pre><code>&lt;property&gt;
  &lt;name&gt;fs.default.name/name&gt;
  &lt;value&gt;hdfs://example-cluster&lt;/value&gt;
&lt;/property&gt;</code></pre></noscript></div>




<div><script src='https://gist.github.com/3958555.js?file=hdfs-site.xml'></script>
<noscript><pre><code>&lt;!-- common server name --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.nameservices&lt;/name&gt;
  &lt;value&gt;example-cluster&lt;/value&gt;
&lt;/property&gt;

&lt;!-- HA configuration --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.ha.namenodes.example-cluster&lt;/name&gt;
  &lt;value&gt;nn1,nn2&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
  &lt;name&gt;dfs.namenode.rpc-address.example-cluster.nn1&lt;/name&gt;
  &lt;value&gt;master1:8020&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
  &lt;name&gt;dfs.namenode.rpc-address.example-cluster.nn2&lt;/name&gt;
  &lt;value&gt;master2:8020&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
  &lt;name&gt;dfs.namenode.http-address.example-cluster.nn1&lt;/name&gt;
  &lt;value&gt;0.0.0.0:50070&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
  &lt;name&gt;dfs.namenode.http-address.example-cluster.nn2&lt;/name&gt;
  &lt;value&gt;0.0.0.0:50070&lt;/value&gt;
&lt;/property&gt;

&lt;!-- Storage for edits' files --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.namenode.shared.edits.dir&lt;/name&gt;
  &lt;value&gt;file:///mnt/filer1/dfs/ha-name-dir-shared&lt;/value&gt;
&lt;/property&gt;

&lt;!-- Client failover --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.client.failover.proxy.provider.example-cluster&lt;/name&gt;
  &lt;value&gt;org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider&lt;/value&gt;
&lt;/property&gt;

&lt;!-- Fencing configuration --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.ha.fencing.methods&lt;/name&gt;
  &lt;value&gt;sshfence&lt;/value&gt;
&lt;/property&gt;
 &lt;property&gt;
  &lt;name&gt;dfs.ha.fencing.ssh.private-key-files&lt;/name&gt;
  &lt;value&gt;/home/user/.ssh/id_dsa&lt;/value&gt;
&lt;/property&gt;


&lt;!-- Automatic failover configuration --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.ha.automatic-failover.enabled&lt;/name&gt;
  &lt;value&gt;true&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
  &lt;name&gt;ha.zookeeper.quorum&lt;/name&gt;
  &lt;value&gt;zk1:2181,zk2:2181,zk3:2181&lt;/value&gt;
&lt;/property&gt;
</code></pre></noscript></div>


<p>This setup is quite OK, as long as you&#8217;re comfortable with maintaining a
separate service (network storage) for handling the HA state. It seems
error prone to me, because it adds another service which high
availability should be ensured. NFS seems to be a bad choice here,
because AFAIK it does not offer HA out of the box.</p>

<p>On the other hand, we have GlusterFS, which is a distributed filesystem,
you can deploy on multiple bricks and increase the replication level.</p>

<p>Nevertheless, it still brings additional burden of another service to
maintain.</p>

<h2>Quorum based solution</h2>

<p><img src="http://blog.innovative-labs.com/blog/hadoop_ha-quorum.png" alt="Hadoop HA - Quorum based edits share" /></p>

<p>With the release of CDH 4.1.0 we are now able to use a much better
integrated solution called JournalNode. Now all the updates are
synchronized through a JournalNode. Each JournalNode have the same data
and all the NameNodes are able to recive filesystem state updates from
that daemons.</p>

<p>This solution is much more consistent with Hadoop ecosystem.</p>

<p>Please note, that the config is almost identical to the one needed for
shared edits directory solution. The only difference is the value for
<em>dfs.namenode.shared.edits.dir</em>. This now points to all the journal
nodes deployed in our cluster.</p>

<div><script src='https://gist.github.com/3973262.js?file=core-site.xml'></script>
<noscript><pre><code>&lt;property&gt;
  &lt;name&gt;fs.default.name/name&gt;
  &lt;value&gt;hdfs://example-cluster&lt;/value&gt;
&lt;/property&gt;</code></pre></noscript></div>




<div><script src='https://gist.github.com/3973262.js?file=hdfs-site.xml'></script>
<noscript><pre><code>&lt;!-- common server name --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.nameservices&lt;/name&gt;
  &lt;value&gt;example-cluster&lt;/value&gt;
&lt;/property&gt;

&lt;!-- HA configuration --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.ha.namenodes.example-cluster&lt;/name&gt;
  &lt;value&gt;nn1,nn2&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
  &lt;name&gt;dfs.namenode.rpc-address.example-cluster.nn1&lt;/name&gt;
  &lt;value&gt;master1:8020&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
  &lt;name&gt;dfs.namenode.rpc-address.example-cluster.nn2&lt;/name&gt;
  &lt;value&gt;master2:8020&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
  &lt;name&gt;dfs.namenode.http-address.example-cluster.nn1&lt;/name&gt;
  &lt;value&gt;0.0.0.0:50070&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
  &lt;name&gt;dfs.namenode.http-address.example-cluster.nn2&lt;/name&gt;
  &lt;value&gt;0.0.0.0:50070&lt;/value&gt;
&lt;/property&gt;

&lt;!-- Storage for edits' files --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.namenode.shared.edits.dir&lt;/name&gt;
  &lt;value&gt;qjournal://node1:8485;node2:8485;node3:8485/example-cluster&lt;/value&gt;
&lt;/property&gt;

&lt;!-- Client failover --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.client.failover.proxy.provider.example-cluster&lt;/name&gt;
  &lt;value&gt;org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider&lt;/value&gt;
&lt;/property&gt;

&lt;!-- Fencing configuration --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.ha.fencing.methods&lt;/name&gt;
  &lt;value&gt;sshfence&lt;/value&gt;
&lt;/property&gt;
 &lt;property&gt;
  &lt;name&gt;dfs.ha.fencing.ssh.private-key-files&lt;/name&gt;
  &lt;value&gt;/home/user/.ssh/id_dsa&lt;/value&gt;
&lt;/property&gt;


&lt;!-- Automatic failover configuration --&gt;
&lt;property&gt;
  &lt;name&gt;dfs.ha.automatic-failover.enabled&lt;/name&gt;
  &lt;value&gt;true&lt;/value&gt;
&lt;/property&gt;
&lt;property&gt;
  &lt;name&gt;ha.zookeeper.quorum&lt;/name&gt;
  &lt;value&gt;zk1:2181,zk2:2181,zk3:2181&lt;/value&gt;
&lt;/property&gt;</code></pre></noscript></div>


<h1>Infrastructure</h1>

<p>In both cases you need to run Zookeeper-based Failover Controller
(<em>hadoop-hdfs-zkfc</em>). This daemon negotiates which NameNode should
become active and which standby.</p>

<p>But that&#8217;s not all. Depending on the way you&#8217;ve choosen to deploy HA you
need to do some other things:</p>

<h2>Shared edits dir</h2>

<p>With shared edits dir you need to deploy networked filesystem, and mount
it on your NameNodes. After that you can run your cluster and be happy
with your new HA.</p>

<h2>Quroum based</h2>

<p>For QJournal to operate you need to install one new package called
<em>hadoop-hdfs-journalnode</em>. This provides startup scripts for Journal
Node daemons. Choose at least three nodes that will be responsible for
handling edits state and deploy journal nodes on them.</p>

<h1>Conclusion</h1>

<p>Thanks to guys from Cloudera we now can use an enterprise grade High
Availability features for Hadoop. Eliminating the single point of
failure in your cluster is essential for easy maintainability of your
infrastructure.</p>

<p>Given the above choices, I&#8217;d suggest using QJournal setup, becasue of
its relatively small impact on the overal cluster architecture. It&#8217;s
good performance and fairly simple setup enable the users to easily
start using Hadoop in HA setup.</p>

<p>Are you using Hadoop with HA? What are your impressions?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[raspberry-pi]]></title>
    <link href="http://zygm0nt.github.com/blog/2012/10/18/raspberry-pi/"/>
    <updated>2012-10-18T23:16:00+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2012/10/18/raspberry-pi</id>
    <content type="html"><![CDATA[<p>About a month ago I finally received my very own Raspberry Pi board!
Don&#8217;t know what that is? Here, read some at their
<a href="http://www.raspberrypi.org/">website</a>.</p>

<p>For the sake of completness let me just describe that as prototyping
platform with ARM processor. It is really similar in concept to what
Arduino is, except it has not that many extensions available (none? or
very little, I&#8217;ve only found those on <a href="http://adafruit.com/">Adafruit</a>
pages).</p>

<p>So, here is the obligatory picture.</p>

<p><img src="http://blog.innovative-labs.com/blog/raspberry-pi.jpg" alt="My very own R-Pi" /></p>

<p>It can run a Linux distribution, so anyone familiar with that can have a
go with this low-powered computer.</p>

<p>The board itself is on the market for quite some time now. That&#8217;s why
there are lots of interesting resources and projects that you can do
with that stuff.</p>

<p>Here are just a bunch of them:</p>

<ul>
<li><a href="http://www.elcojacobs.com/uberfridge/">UberFridge</a> - for all the
brewers in the world :)</li>
<li>SOHO server</li>
<li>a supercomputer - <a href="http://www.southampton.ac.uk/mediacentre/features/raspberry_pi_supercomputer.shtml">cluster out of R-Pi</a></li>
<li>Arcade Cabinet - <a href="http://www.raspberrypi.org/phpBB3/viewtopic.php?f=9&amp;t=1814">custom build gaming rig</a></li>
<li>Hand-held emulation machine - <a href="http://www.raspberrypi.org/phpBB3/viewtopic.php?f=9&amp;t=4570">R-Pi on the go</a></li>
<li>sending R-Pi to <a href="http://www.raspberrypi.org/phpBB3/viewtopic.php?f=9&amp;t=2059">the edge of Space</a></li>
<li>coffe machine - <a href="http://moccapi.blogspot.co.uk/">MoccaPi</a></li>
<li>other projects on elinux - <a href="http://elinux.org/RPi_Projects">Elinux projects</a></li>
<li>other projects on Hack-a-Day - <a href="http://hackaday.com/tag/raspberry-pi/">Hack-a-Day Raspberry Pi
tags</a></li>
</ul>


<p>Do you also own R-Pi? Share what you plan to do with it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hadoop for Enterprises]]></title>
    <link href="http://zygm0nt.github.com/blog/2012/06/18/hadoop-for-enterprises/"/>
    <updated>2012-06-18T11:08:09+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2012/06/18/hadoop-for-enterprises</id>
    <content type="html"><![CDATA[<div class='post'>
<p>Hadoop&#8217;s usage as a big data processing framework gains a lot of attention lately. Now, not only big players see, that they can embrace the data their sites or products are generating and develop their businesses on it. For that to happen two things are needed: the data itself and means of processing really big amounts of it.  </p>

<p><span class="image-wrap" style=""><img src="http://blog.innovative-labs.com/blog/3488314950_453466f762_b.jpg" style="border: 0px solid black; width: 400px;" /></span></p>

<p>Gathering data is relatively easy. These are not necessarily structured data, you don&#8217;t need to plan their usage at first. Just start collecting them and than you may experiment with their potential usage. If they&#8217;ll come out as useless rubbish - deleting them won&#8217;t be hard <img class="emoticon" src="http://zygm0nt.github.com/confluence/images/icons/emoticons/smile.gif" height="20" width="20" align="absmiddle" alt="" border="0"/> But imagine the values it may contribute to your business:</p>

<ul>
	<li>faster services - working on optimized data</li>
	<li>more clients - because of more relevant search results</li>
	<li>happy clients - your service can &#8220;read their minds&#8221; <img class="emoticon" src="http://zygm0nt.github.com/confluence/images/icons/emoticons/smile.gif" height="20" width="20" align="absmiddle" alt="" border="0"/></li>
	<li>etc.</li>
</ul>


<p>There are many companies that utilize Hadoop ecosystem for their own needs. You can read about some of them here: <a href="http://wiki.apache.org/hadoop/PoweredBy" class="external-link" rel="nofollow">http://wiki.apache.org/hadoop/PoweredBy</a> But since that page lacks insight into specific applications of Hadoop I&#8217;ve tried to delve into<br/>
details of how Hadoop helped tame some companies&#8217; big data sets.</p>

<EXCERPT>

<h2><a name="test-Facebook"></a>Facebook</h2>

<p>Being a social network provider, a widely used one, they require no introduction. However if you&#8217;ve lived under a rock for last couple years just visit their website <a href="http://facebook.com" class="external-link" rel="nofollow">http://facebook.com</a></p>

<p>Their main usage is data warehousing. Since they require to be able to access the data fast and reliably they had a need for real-time querying of their huge, and always growing data set. Their switch from MySQL databases was required due to the increasing workloads they experienced with standard databases. What they got &#8220;out of the box&#8221; with Hadoop was all the benefits of distributed file system (HDFS features). They expanded the ideas behind that even further and implemented truly Highly Available file system without Single Point of Failure.</p>

<p>Facebook has 3 interesting usage scenarios in which Hadoop plays a major role:</p>

<ul>
	<li>Titan - is Facebook&#8217;s messaging system. It processes messages exchanged between users. Ensures that it happens fast and without glitches. Here Hadoop is used mainly as a huge, unlimited storage.</li>
	<li>Puma - Facebook Insights - a tool providing page statistics for  advanced Facebook users. Based on streams of data (clicks, likes, shares, comments and impressions) it graphs those data and makes it available near instantly.</li>
	<li>ODS - Operational Data Store - which stores Facebook&#8217;s internal metrics - collections of OS and cluster health metrics. And it facilitates multiple accounting solutions.</li>
</ul>


<h2><a name="test-Twitter"></a>Twitter</h2>

<p>This popular micro-blogging platform, where you can register your account and follow friends and celebrities for their micro-messages does some pretty interesting things with their Hadoop cluster.</p>

<p>One of their motivations is to speed up their web-page&#8217;s functionality. That is why the compute users&#8217; friendships in Twitter&#8217;s social graph with Hadoop. Using connections between users they calculate their relationship to each other and estimate groups of users.</p>

<p>Since this service&#8217;s users generate lots of content, the company conducts researches based on natural language processing. They probe what could be told about a user from his tweets. They use tweets&#8217; contents for advertisement purpose, trends analysis and many more.</p>

<p>From tweets and user&#8217;s behaviours they characterise usage scenarios. Also, they gather usage statistics, like number of searches daily, number of tweets. Based on this seemingly irrelevant data they run comparisons of different types of users. Twitter analyzes data to determine whether mobile users, users who use third party clients or power users use Twitter differently from average users. Of course theses seem like really specific applications but nevertheless they are very original and base on the data that Twitter has been gathering for some time now. </p>

<h2><a name="test-EBay"></a>EBay</h2>

<p>Being the biggest auctioning site on the Internet, EBay uses Hadoop processing for increasing search relevance based on click-stream data, user data. This seems pretty obvious, considering their area of operation.</p>

<p>However the also have one other interesting thing - they try hard to automatically fill auctioned objects&#8217; metadata, based on the descriptions and other data provided by users. They employ data mining approach for this tasks and judging from their constant growth it seems to work <img class="emoticon" src="http://zygm0nt.github.com/confluence/images/icons/emoticons/smile.gif" height="20" width="20" align="absmiddle" alt="" border="0"/></p>

<h2><a name="test-LinkedIn"></a>LinkedIn</h2>

<p>Social network for professionals, thou a lot smaller than Facebook. Based on click-streams they discover relations between users. All the data concerning latest visits on your profile or people you may know from other places - this comes from Hadoop based analysis of those clicks people make all the time on their sites.</p>

<p>Also a very neat feature, called InMaps (<a href="http://inmaps.linkedinlabs.com/" class="external-link" rel="nofollow">http://inmaps.linkedinlabs.com/</a>) analyse declared schools and companies and generates data for graph with clustered friends of yours.</p>

<h2><a name="test-Last.fm"></a>Last.fm</h2>

<p>This on-line radio site, praised by many for its invaluable recommendations&#8217; system seems like a rather small and simple service. But behind the facade of simple web page there are lots of data being processed, so that their services could match a certain level of perfection.</p>

<p>Such large volume of their data comes from scrobbles. Each users of their service listening to a song generates a note about this fact - called scrobble. Based on that and user profiles they calculate global band popularity charts, maps of bands&#8217; popularity and many more usage statistics and timeline charts.</p>

<p><span class="image-wrap" style=""><img src="http://blog.innovative-labs.com/blog/7346959440_71648c9fe7_b.jpg" style="border: 0px solid black; width: 400px;" /></span></p>

<h2><a name="test-Conclusion"></a>Conclusion</h2>

<p>They just try to detect and trace new patterns in seemingly chaotic data sets. Perhaps you could also do the same? Analyze your data and expand your business value?</p></div>
<h2>Comments</h2>
<div class='comments'>
<div class='comment'>
<div class='author'><a href="http://www.wedding-cake-decorations.net">wedding cake decorations</a></div>
<div class='content'>
<p>We stumbled over here from a different web address and thought I might check things out.<br />
I like what I see so i am just following you.<br />
Look forward to checking out your web page yet again.</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://www.car-floor-mats.net">rubber floor mats</a></div>
<div class='content'>
<p>I like what you guys are up too. This type of clever work and reporting!<br />
<br />
Keep up the awesome works guys I&#8217;ve added you guys to my own blogroll.</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://www.bispioner.ru/phpBB3/memberlist.php?mode=viewprofile&amp;u=119586">Svayambhut Ghosh</a></div>
<div class='content'>
<p>Greetings from Florida! I&#8217;m bored at work so I decided to browse your site on my iphone during lunch break. I enjoy the info you present here and can&#8217;t wait to take a look <br />
when I get home. I&#8217;m surprised at how quick your blog loaded on my cell phone .. I&#8217;m not even using WIFI, just 3G .<br />
. Anyways, very good site!</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://www.salethenorthfacejackets.com">north face jackets</a></div>
<div class='content'>
<p>Comfortableness &lt;a href=&quot;http://www.salethenorthfacejackets.com&quot;&gt;north face jackets&lt;/a&gt;<br />
is crucial when they get it that will &lt;a href=&quot;http://www.salethenorthfacejackets.com&quot;&gt;north face outlet&lt;/a&gt; get the best school bags pertaining to going camping &lt;a href=&quot;http://www.salethenorthfacejackets.com&quot;&gt;north face sale&lt;/a&gt;. Your easiest guarantee in the case of even larger delivers has become One with an inner metal framework, one that can wind &lt;a href=&quot;http://www.salethenorthfacejackets.com&quot;&gt;cheap north face&lt;/a&gt; up being aligned to help you appropriately fit your &lt;a href=&quot;http://www.salethenorthfacejackets.com/the-north-face-women-1&quot;&gt;north face women&lt;/a&gt; body. They should be now have http://www.salethenorthfacejackets.com secure which were wholly flexible, because essentially in the form of midsection belt to get more aid.</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://www.plants-for-sale.com">plants sale</a></div>
<div class='content'>
<p>I never imagined how much stuff there was out there <br />
on this! Thanks for making it easy to get the picture</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://www.facebook.com/profile.php?id=100003406472249">gWgVcetqzVZukd</a></div>
<div class='content'>
<p>What Programming Languages Do Jobs Require? | Regular Geek  regulargeek.com/2009/07/21/what-programming-languages-do-jobs-require   view page   cahecd  As a software engineer, you need to keep your skills sharp and current. This is a general requirement of the job. In addition to this, in the current economy you do not want to be without a job. Obviously, this means learning more about what your current company uses for all of its development. What if you do not have a job or you are looking to leave? What technologies or programming languages should you be looking into?   From the page</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://businesses.wickedlocal.com/MA-Westford/Computer-Service-and-Repair/15">computer pc repair</a></div>
<div class='content'>
<p>Howdy are using Wordpress for your site platform? I&#8217;m new to the blog world but I&#8217;m trying to <br />
get started and create my own. Do you need any coding expertise to make your own <br />
blog? Any help would be greatly appreciated!</p></div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SoapUI ext libs and its weirdness]]></title>
    <link href="http://zygm0nt.github.com/blog/2011/11/02/soapui-ext-libs-and-its-weirdness/"/>
    <updated>2011-11-02T16:32:15+01:00</updated>
    <id>http://zygm0nt.github.com/blog/2011/11/02/soapui-ext-libs-and-its-weirdness</id>
    <content type="html"><![CDATA[<div class='post'>
<p>Suppose you want to add some additional jars to your SoapUI installation. It all should work ok if you put them in <b>bin/ext</b> directory. It is scanned at startup, and jars found there are automatically added to classpath.
</p>

<p>
However if you want to add some JDBC drivers, and happen to be using SoapUI version higher than 3.5.1 it is a bit more tricky.
</p>
<p>You may face this NoClassDefFoundError:<br/>

<pre>
An error occured [oracle/jdbc/Driver], see error log for details
java.lang.NoClassDefFoundError: oracle/jdbc/Driver
</pre>
</p> 

<p>
If so, try registering your drivers with <b>registerJdbcDriver</b> function, like I did in this snippet of code:
</p>
<div><script src='https://gist.github.com/1333768.js?file=jdbc-soapui.groovy'></script>
<noscript><pre><code>if (context.sql == null) {
	def driver = 'oracle.jdbc.OracleDriver'
	com.eviware.soapui.support.GroovyUtils.registerJdbcDriver( driver )
	def sql = Sql.newInstance('jdbc:oracle:thin:' + dbUri, driver)
	context.setProperty('sql', sql)
}</code></pre></noscript></div>



<p>What a crappy thing!</p></div>
<h2>Comments</h2>
<div class='comments'>
<div class='comment'>
<div class='author'><a href="http://podzastaw.org">Kelli</a></div>
<div class='content'>
<p>You can definitely see your expertise in the work you write.<br />
The world hopes for more passionate writers such as you who are not afraid to <br />
say how they believe. Always go after your heart.</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://www.052b.com">Buford</a></div>
<div class='content'>
<p>It&#8217;s going to be end of mine day, however before finish I am reading this fantastic paragraph to increase my experience.</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://www.hotelfocus.com.pl">Chandra</a></div>
<div class='content'>
<p>My family every time say that I am wasting my time <br />
here at net, except I know I am getting knowledge every day by reading such pleasant articles.</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://www.wayn.com/waynblog.html?wci=viewentry&amp;entry_key=265563">Florene</a></div>
<div class='content'>
<p>Thanks , I&#8217;ve just been looking for info approximately this topic for a long time and yours is the greatest I have found out till now. But, what concerning the bottom line? Are you positive in regards to the source?</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://www.hotelbookingwebsite.net">Myron</a></div>
<div class='content'>
<p>Nice post. I was checking continuously this blog and I am impressed!<br />
Extremely helpful information specially the last part <br />
:) I care for such information much. I was looking for this <br />
particular info for a long time. Thank you and best of luck.</p></div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is NoSQL good for?]]></title>
    <link href="http://zygm0nt.github.com/blog/2011/09/21/what-is-nosql-good-for/"/>
    <updated>2011-09-21T23:12:34+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2011/09/21/what-is-nosql-good-for</id>
    <content type="html"><![CDATA[<div class='post'>
<b>&#8230; or how I ended up writing a CouchDB proof of concept app?</b>

<p>Once upon a time I set out on a journey to discover the NoSQL land.
I&#8217;ve decided that doing simple queries wouldn&#8217;t be interesting enough.
That&#8217;s why I&#8217;ve chose to create an app that would be based on some NoSQL
database.</p>

<p>
The main idea was to create an app, that would dynamically update itself
with geographic data flowing in. Since there are myriads of geo-data
that are available on the internet, you can pick your favorite one and
load them into your SQL database of choice.
</p>

<EXCERPT>
<p>
In my case the primary source of data was a proprietary database, or more specifically - one table in it continuously updated with new data. To make that
data visible on my map I needed to:
</p>

<ul>
<li> buffer the huge amount of those records - so as not to overhoul
other services with large traffic, and not to flood the frontend</li>
<li> convert then to my representation</li>
<li> display them - have presentation layer in a browser - since
browser-based frontend was the easiest and fastest to develop</li>
</ul>

<p>
The idea of the front-end HTML page was to show new points on the map.
From the moment of opening the page records that appear in database
table should be shown interactively on the screen.
</p>

<h2>Toys used</h2>

<p>
For the first step I chose to use RabbitMQ broker. A queue on the broker would receive messages - one message per database table&#8217;s row.
Then I&#8217;d use some simple groovy middle ware to convert the data to appropriate format and put it onto another db - this time db specific
to my app. 
</p>

<p>
You may ask why incorporate another database. It would be
good for separating environments - assuming the original data contains
some vulnerable content that should be anatomised, or we just don&#8217;t feel
comfortable exposing the whole database of some XYZ-system just to have
access to its one table.
</p>

<p>
Since for my presentation layer I chose HTML+JS without any application server-based back-end I&#8217;ve decided on CouchDB . This seemed like
a perfect match for this scenario. Why? - ease of use, REST API, with JSON responses - just great for interacting with my simple front-end.
</p>

<p>
The flow of things was as shown on the image below:
</p>

<IMG src="http://blog.innovative-labs.com/blog/gmapper.png"
alt="diagram"/>

<h2>Avro - for the beginning</h2>
<p>
As you can see, I&#8217;ve chosen JSON as my data-format. I&#8217;ve been considering
<a href="http://avro.apache.org">Apache Avro</a> in the first place but
using it was a real pain in the ass. Avro itself is used in <a
href="http://hadoop.apache.org">Apache Hadoop</a> as a serialization
layer, so it would seem OK, but it has virtually <em>no
documentation</em>. But once you tear through the unintuitive interface
and manage to handle all those unthinkable exceptions you get a few pros
for this library. It&#8217;s great in that it does not require code generation - I
like it being made on the fly. It also offers sending data in binary
format, which was not necessary, but never the less is a nice feature.
</p>

<p>
What I certainly didn&#8217;t like about it was its orientation on the files
rather than chunks of data - so it was not so obvious how should I send
data through the wire. 
</p>

<p>
Than I found out it can produce JSON output, which would work for me,
except the output could not have been parsed by other JSON libraries :)
(<a
href="http://stackoverflow.com/questions/5375243/jcouchdb-svenson-unable-to-parse-json-string">I&#8217;ve
asked on stackoverflow about that, but with no luck</a>). 
</p>

<p>If my whining haven&#8217;t put you back and still would like to see how to use Avro, try this unit
test in project&#8217;s GitHub repo: <a
href="https://github.com/zygm0nt/gmapped/blob/master/feeder/src/test/groovy/pl/ftang/example/feeder/avro/AvroSimpleTest.groovy">AvroSimpleTest.groovy</a>
</p>


<h2>Svenson</h2>

<p>
I&#8217;ve dropped Avro in favour of a simple JSON lib called (<a
href="http://code.google.com/p/svenson/">Svenson</a> and that was
painless. The only thing I was forced to do was create my model class in
Java - the rest of the project is written in Groovy. I&#8217;ve no idea why
was that necessary, and didn&#8217;t want to look into it.
</p>

<h2>RabbitMQ</h2>

<p>
Further on the way is <a href="http://www.rabbitmq.com/">RabbitMQ</a>, to which records are filled by a feeding
middle-ware written in Groovy. Since I use <a
href="http://activemq.apache.org">ActiveMQ</a> on a day-to-day basis,
I&#8217;ve decided to try something new. This broker is a really nice piece of
software. Being written in Erlang makes it really fast. What&#8217;s more it
has some extensive capabilities and is easy to approach for anyone
similar with messaging (JMS and friends). For such a lightweight product
it is really powerful - implements AMQP! 
</p>

<h2>CouchDB</h2>

<p>
From the broker&#8217;s queue messages are again fetched by a middle-ware just
to be put into <a href="http://couchdb.apache.org/">CouchDB</a> view.
This database is also written in Erlang. It&#8217;s very reliable, however the
way it handles refreshing view isn&#8217;t the most pleasant one -
performance-wise. 
</p>

<p>
Word of advice - if you&#8217;re on Debian derivative, be cautious with
apt-repository version. It&#8217;s rather _ancient_. Also remember to add
<b>allow_jsonp = true</b> to you config file
<i>/opt/couchbase/etc/couchdb/local.ini</i>. It&#8217;s not enabled by
default, and not having this set would result with empty responses from
the CouchDB server.</p>

<p>The problem here is, that the browser doesn&#8217;t allow quering a web server with hostname other than the one the script originates.
 More on this case <a
href="http://stackoverflow.com/questions/3386679/connection-ajax-couchdb-and-javascript">here</a>. Seems like my problem could be overcame by changing url in index.html and hostname couchdb listens on to the same address.
</p>

<p>
I&#8217;ve also created a view, that would expose an event by key: <a
href="https://github.com/zygm0nt/gmapped/blame/master/couchdb/by_date_view.js">view
code</a>
</p>

<h2>Presenting the dots</h2>

<p>
As a back-end I&#8217;ve done some JQuery based AJAX calls - nothing too
fancy. All things necessary for presentation layer are in <a
href="https://github.com/zygm0nt/gmapped/blob/master/index.html">this
file</a>.
</p>

<h2>Things to consider</h2>

<p>
Please bear in mind that this whole application is rather a playground,
not a full-fledged project!! After creating all the parts I have some
doubts about some architectural decisions I made. I don&#8217;t think the
security have been taken into account seriously enough. Also scalability
was never an issue ;-)
</p>

<p>
If you have some thoughts about any of the aspects mentioned in this
post, please feel free to comment or contact me directly :)
</p>

<p>

And also you may try the application by yourself - it&#8217;s on the <a
href="https://github.com/zygm0nt/gmapped">GitHub</a>.
</p></div>
<h2>Comments</h2>
<div class='comments'>
<div class='comment'>
<div class='author'><a href="http://mcl.jogger.pl">Marcin</a></div>
<div class='content'>
<p>@Piotrek, here is a link to JIRA ticket concerning this feature. I think it is being discussed ATM: https://issues.apache.org/jira/browse/COUCHDB-431</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://blog.koszulinski.pl">Piotrek Reinmar Koszuliński</a></div>
<div class='content'>
<p>About Same Origin Policy - now there&#8217;s Cross Origin Resource Sharing available in most of common browsers. It should help You if CouchDB has support for it.</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://mcl.jogger.pl">Marcin</a></div>
<div class='content'>
<p>@klausa, thanks for your advice. I&#8217;ve made some changes to the post.</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://klausa.jogger.pl">klausa</a></div>
<div class='content'>
<p>&gt;The main idea was to create an app, that would dynamically update itself with geographic data flowing in. <br />
<br />
Not to nitpick, but that doesn&#8217;t seem like an idea for app. I think you should explain what that displayed data is here.  If you moved your &#8216;Presenting the dots&#8217; paragraph just above &#8216;Toys used&#8217;, it would be clear what do you wanted to do with this app.<br />
<br />
&gt;Also remember to add allow_jsonp = true to you config file /opt/couchbase/etc/couchdb/local.ini.<br />
<br />
I think you should explain what that option *really* does.<br />
<br />
Other than that, nice post!</p></div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 best things to do with your Kindle]]></title>
    <link href="http://zygm0nt.github.com/blog/2011/08/23/5-best-things-to-do-with-your-kindle/"/>
    <updated>2011-08-23T00:19:14+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2011/08/23/5-best-things-to-do-with-your-kindle</id>
    <content type="html"><![CDATA[<div class='post'>


<p>
I bought a Kindle (3rd generation, Wi-Fi only) some time ago - like half
a year ago. Read some
books, done some web-browsing (awful, quite unpleasant). Gradually I
became more and more curious of other things possible to achieve with
this slate-looking piece of tech. These are my thoughts and ideas.
</p>

<p>
Got a Kindle? Use it every day? Feel like modding or extending your ways
of usage? Great! Read on, and share your thoughts in comments!
</p>

<EXCERPT>

<ol>

<li>
Readability! - This web app is great! Generally this is a simple plug-in
for your browser that will show a little button somewhere on the
toolbar, and if you click it, the page you&#8217;re reading now will be
transformed into nice and sleek content-only page. Look on the screen
below:<br/>

<a href="http://blog.innovative-labs.com/blog/readability_effect.png"><img border="0"
src="http://blog.innovative-labs.com/blog/readability_effect_small.png"/></a>
<br/>

This plug-ins additional function is sending to Kindle account. That&#8217;s
the nicest way to read those loads of RSS-sources articles :) The only
limitation is that graphics won&#8217;t be included if resulting file would
exceed allowed size of kindle documents - that&#8217;s 2MB AFAIR.

<br/>

<img src="http://blog.innovative-labs.com/blog/readability_menu.png"/>

</li>


<li>
<b>Install some hacks!</b> - be that serious hacks or rather some simple
software modifications:

<ul>
    <li>read all book formats with Calibre - <a
href="http://www.hacktheday.com/quick-simple-guide-hacking-kindle-nook-ebooks/">link</a></li>
    <li>play Zork on a Kindle!!! - <a
href="http://poptunes.org/howto-hack-your-kindle-to-run-zork-and-change-screensavers">link</a></li>
    <li>alternative Kindle keyboard - <a
href="http://hackaday.com/2011/07/28/frankenkindle-building-an-alternate-kindle-keyboard/">link</a></li>
    <li>custom fonts - <a
href="http://www.mobileread.com/forums/showthread.php?t=88004">link</a></li>

</ul>

</li>

<li><b>Install custom screen-savers</b> - <a
href="http://wiki.mobileread.com/wiki/Kindle_Screen_Saver_Hack_for_all_2.x_and_3.x_Kindles">do
this</a> 
to be able to install your own images. &#8230;because you&#8217;ve always wanted
to have some other things on screen when your kindle is in standby mode. Of
course, the original screen-savers look great, but there are only few.
Installing this hack gave me an opportunity to have a multitude of new
images. Now my Kindle looks even better!</li>

<li><b>Try out Chinese kindle software - <a
href="http://www.duokan.com/forum/thread-16541-1-1.html">doukan.com</a></b> -  As a matter
of fact, I haven&#8217;t installed that software yet. It doesn&#8217;t look good
enough for me, and has some minor problems. However this is great, that
there is actually some other option - I&#8217;m not forced to use the official
firmware. And this distribution has many nice features like PDF reflow.</li>

<li><b>Enable Chinese fonts support on your kindle</b> - damn! I&#8217;d like
a simple, step by step tutorial on how to set up chinese fonts on a
kindle. I&#8217;d like to put some font file on my device, fire some
chinese book and be able to see the actual characters..</li>

<li><b>Programming for Kindle</b> - with <a
href="http://www.amazon.com/kdk">Kindle Official SDK</a> - well, not
quite! - unfortunately this is reserved only for the Chosen Ones. I&#8217;ve
applied for the SDK but they
haven&#8217;t sent me my developer key yet, and it&#8217;s been ~2 months. This is
not &#8220;being supportive&#8221; or &#8220;supporting the community&#8221;.</li>

</ol>

<p>
And how do You use your Kindle? Perhaps you&#8217;re doing some serious, crazy
things with it? Share your thoughts!</p></div>
<h2>Comments</h2>
<div class='comments'>
<div class='comment'>
<div class='author'><a href="">Hoppke</a></div>
<div class='content'>
<p>Zgłosiłem się po kindlowe SDK prawie rok temu i niiic, cisza. Widać nie jestem dość cool, by dać mi tę zabawkę do ręki :)<br />
<br />
Co do książek, to fakt, DRM wszędzie. Ale DRM w ebookach działa jak każdy inny (czyli marnie &#8211; da się zdjąć DRM Empiku, Amazona, itp.), więc użytkownik z odrobiną zacięcia da radę.<br />
<br />
PS. Mój kindel  postanowił wyzionąć ducha jakoś w zeszłym tygodniu, na 10 dni przed upływem gwarancji. Kindle znajomej padł ciut (tydzień-dwa?) wcześniej. Amazon bez szemrania wysyła nowe, ale&#8230; nie sposób oprzeć mi się uczuciu, że te urządzonka były obliczone na rok życia. A przynajmniej pierwsza seria z preorderów, obecne są (mam nadzieję) już trwalsze.</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://pecet.jogger.pl">pecet</a></div>
<div class='content'>
<p>Dzięki za odpowiedzi :)</p></div>
</div>
<div class='comment'>
<div class='author'><a href="">moher</a></div>
<div class='content'>
<p>Też kupowałem kindle ~6 m-cy temu więc się wtrącę:<br />
<br />
Ad  1. Ja kupowałem bezpośrednio w Amazonie i nie zapłaciłem VAT-u (OIDP cła na elektronikę z USA nie ma).<br />
Ad 2.  Przeglądarka IMHO z JS radzi sobie całkiem dobrze, ale jest cholernie wolna i nawigacja jest niewygodna.<br />
Ad 3.  Domyślnie tylko WPA2-PSK, ale jest tam nomalny wpa supplicant więc można edytować sobie konfig i szaleć.<br />
Ad 4. Ja całkiem sporo czytam i ładuje raz na miesiąc, może minimalnie częściej.<br />
Ad 5. Można kupować z Amazona, ja kupuje z Amazon UK, bo kiedy konfigurowałem Kindle to miał niższe ceny książek. Co do DRM to obsługuje tylko swój DRM (czyba azw, czyli mobi + Amazonowy DRM),  z innych trzeba zdjąć DRM i skonwertować na obsługiwany format (Calibre rulez!).</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://mcl.jogger.pl">Marcin</a></div>
<div class='content'>
<p>Okej, no więc po koleji:<br />
<br />
1. Kupowałem bezpośrednio na Amazon - tyle że na amerykańskim, bo tylko z tamtego ślą Kindle do Polski. Uważam, że to jest najtańsza możliwa opcja. Cło opłaca Amazon, Ty niczym się nie przejmujesz, wszystko jest zrobione za Ciebie. Cała impreza kosztowała mnie coś koło 400zł (Kindle 3 wifi only). Z tego co widziałem to na Allegro jest zdecydowanie drożej.<br />
<br />
2. Przeglądanie stron na Kindlu to tylko w razie naprawdę dużej potrzeby. Mi się nie podoba, wyświetlacz jest na tyle mało responsywny, że swobodne surfowanie po sieci jest niewykonalne. Jak musisz koniecznie coś sprawdzić, to sprawdzisz, ale dla przyjemności to raczej w ten sposób się tego nie robi ;-)<br />
<br />
3. Nie mam dostępu do WPA2 z Radiusem. Używam na WPA2 z PSK - i działa bez zarzutu. Może pogooglaj gdzieś? <br />
<br />
4. To prawda, trzyma miesiąc, tylko trzeba pamiętać żeby Wi-Fi wyłączać, bo nawet na standbaju zrzera baterię.<br />
<br />
5. W Polsce można bez problemu kupować książki z Amazona (nadal, przez Wifi, bo przez 3G to nie wiem). Co do Polskich sklepów, to o ile oferują wspierane przez Kindla formaty, to nie powinno być problemu. Ja osobiście raczej mało książek kupuję na Kindla - korzystam z ogólno dostępnej klasyki + mam osobno kupione PDFy itp. Generalnie nie przeczytasz żadnych książek w pub&#8217;ach ani tym podobnych formatach. Aczkolwiek są na to haki (między innymi chinski software, o którym pisałem).<br />
<br />
W każdym razie polecam zakup, bo naprawdę warto - chyba że wolałbyś coś w stylu IPada (kolory, łatwe surfowanie), to wtedy Kindle nie jest dla Ciebie :)</p></div>
</div>
<div class='comment'>
<div class='author'><a href="http://pecet.jogger.pl">pecet</a></div>
<div class='content'>
<p>Sorry że po polsku, ale przymierzam się do kupna Kindla, i mam parę pytań, wybacz jeśli zaśmiecam ci notkę:<br />
<br />
1. Gdzie kupowałeś bezpośrednio na Amazonie czy przez pośrednika z Allegro, jak z cłem i innymi podatkami? <br />
2. Przeglądarka w Kindle 3 podobno na webkicie, jak w praktyce, dobrze sobie radzi ze stronami, co z JSem?<br />
3. WiFi obsługuje szyfrowanie WPA2 korporacyjne z serwerem RADIUS, czy tylko wersję WPA2 z PSK?<br />
4. Jak z bateryjką, słyszałem że miesiąc daje rady, prawda to?<br />
5. Można w Polandii kupować w Amazonie książki do Kindla? Są jakieś polskie sklepy z polskimi legalnymi ksiażkami, które później bez problemów wrzucę do Kindla, czy przez DRM nie da rady?</p></div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Great many ways to enjoy life!]]></title>
    <link href="http://zygm0nt.github.com/blog/2011/08/08/great-many-ways-to-enjoy-life/"/>
    <updated>2011-08-08T00:44:39+02:00</updated>
    <id>http://zygm0nt.github.com/blog/2011/08/08/great-many-ways-to-enjoy-life</id>
    <content type="html"><![CDATA[<div class='post'>
This looks like a very nice art+video project. Look at those clips:


<ol>

<li><p><a href="http://vimeo.com/27243869">EAT</a> from <a href="http://vimeo.com/rickmereki">Rick Mereki</a> on <a href="http://vimeo.com">Vimeo</a>.</p><br/>
<iframe src="http://player.vimeo.com/video/27243869?color=ffffff" width="400" height="225" frameborder="0"></iframe>
</li>

<li><p><a href="http://vimeo.com/27244727">LEARN</a> from <a href="http://vimeo.com/rickmereki">Rick Mereki</a> on <a href="http://vimeo.com">Vimeo</a>.</p><br/>

<iframe src="http://player.vimeo.com/video/27244727?color=ffffff" width="400" height="225" frameborder="0"></iframe>
</li>

<li><p><a href="http://vimeo.com/27246366">MOVE</a> from <a href="http://vimeo.com/rickmereki">Rick Mereki</a> on <a href="http://vimeo.com">Vimeo</a>.</p><br/>
<iframe src="http://player.vimeo.com/video/27246366?color=ffffff" width="400" height="225" frameborder="0"></iframe>
</li>

</ol></div>
<h2>Comments</h2>
<div class='comments'>
</div>
]]></content>
  </entry>
  
</feed>
